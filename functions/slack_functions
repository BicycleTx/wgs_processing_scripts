#!/usr/bin/env bash

source message_functions || exit 1

# Downstream scripts should normally only use functions slack_info, slack_warn and slack_die
# Some markdown code is allowed (see https://api.slack.com/reference/surfaces/formatting)

caller=$(basename "$(caller | cut -d" " -f2)")
host=$(hostname)

if [[ -z "${SLACK_DEFAULT_URL}" || -z "${SLACK_TESTING_URL}" ]]; then
    if [[ -f "/data/dbs/slack/slack_webhook_urls" ]]; then
        source "/data/dbs/slack/slack_webhook_urls"
    elif [[ -f "/data/common/dbs/slack/slack_webhook_urls" ]]; then
        source "/data/common/dbs/slack/slack_webhook_urls"
    fi
fi
[[ -n "${SLACK_DEFAULT_URL}" ]] || warn "Missing required ENV variable SLACK_DEFAULT_URL"
[[ -n "${SLACK_TESTING_URL}" ]] || warn "Missing required ENV variable SLACK_TESTING_URL"

slack () {
    local url="$1" && shift
    local usr="$1" && shift
    local msg="$1" && shift
    local col="$1" && shift # color
    msg=$(echo "$msg" | tr '"' "'") # double quotes not allowed
    data_json=$(
        printf '{"username":"%s (on behalf of %s@%s)","attachments": [{"text":"%s","color":"%s","attachment_type":"default"}]}' \
        "$usr" "$caller" "$host" "$msg" "$col"
    )
    response=$(curl -s -X POST -H 'Content-type: application/json' --data "${data_json}" "${url}")
    if [[ ! "$response" == "ok" ]]; then
        error "Sending of slack msg was not ok (response: ${response})"
    fi
}

slack_test () {
    local msg="${1:-NoMessageProvided}" && shift
    local usr="${1:-TestBot}" && shift
    local url="${SLACK_TESTING_URL}" # currently sourced from file
    local col="#000000" # black

    slack "${url}" "${usr}" "${msg}" "${col}"
}

slack_info () {
    local msg="${1:-NoMessageProvidedToSlackInfo}" && shift
    local usr="${1:-InfoBot}" && shift
    local url="${SLACK_DEFAULT_URL}" # currently sourced from file
    local col="#0000FF" # blue

    slack "${url}" "${usr}" "${msg}" "${col}"
    info "${msg}"
}

slack_warn () {
    local msg="${1:-NoMessageProvidedToSlackWarn}" && shift
    local usr="${1:-WarnBot}" && shift
    local url="${SLACK_DEFAULT_URL}" # currently sourced from file
    local col="#FF0000" # red

    slack "${url}" "${usr}" "${msg}" "${col}"
    warn "${msg}"
}

slack_die () {
    local msg="${1:-NoMessageProvidedToSlackDie}" && shift
    local usr="${1:-ErrorBot}" && shift
    local url="${SLACK_TESTING_URL}" # currently sourced from file
    local col="#FF0000" # red

    slack "${url}" "${usr}" "${msg}" "${col}"
    die "${msg}"
}