#!/usr/bin/env bash

source locate_files || exit 1
source metadata_functions || exit 1
source api_functions || exit 1
source message_functions || exit 1
source io_functions || exit 1

run_dir=$1 && shift
output_dir=$1 && shift

if [[ -z "${run_dir}" || -z "${output_dir}" ]]; then
    error "Inputs missing. Exiting";
fi

create_or_cleanup_dir ${output_dir}

orange_jar=$(locate_research_orange)

doid_json=$(locate_doid_json)
cohort_mapping_tsv=$(locate_cohort_mapping_tsv)
cohort_percentiles_tsv=$(locate_cohort_percentiles_tsv)
driver_gene_panel_tsv=$(locate_driver_gene_panel_37_tsv)
known_fusion_file=$(locate_known_fusion_data_37_csv)

tumor_sample=$(load_tumor_sample_from_metadata ${run_dir})
reference_sample=$(load_ref_sample_from_metadata ${run_dir})

if [[ ${tumor_sample} == "COLO"* ]]; then
    primary_tumor_doids="8923"
else
    primary_tumor_doids=$(get_primary_tumor_doids_for_sample ${tumor_sample})
    if [[ -z "${primary_tumor_doids}" ]]; then
        primary_tumor_doids="\"\""
    fi
fi

ref_genome_version="37"
pipeline_version_file="${run_dir}/pipeline.version"
pipeline_version_cmd=""
if [[ -f "${pipeline_version_file}" ]]; then
    pipeline_version_cmd="-pipeline_version_file ${pipeline_version_file}"
fi

ref_sample_wgs_metrics_file=$(locate_wgs_metrics ${run_dir} ${reference_sample})
ref_sample_flagstat_file=$(locate_flagstats ${run_dir} ${reference_sample})
tumor_sample_wgs_metrics_file=$(locate_wgs_metrics ${run_dir} ${tumor_sample})
tumor_sample_flagstat_file=$(locate_flagstats ${run_dir} ${tumor_sample})
sage_germline_gene_coverage_tsv=$(locate_sage_germline_gene_coverage ${run_dir})
sage_somatic_ref_sample_bqr_plot=$(locate_sage_bqr_plot ${run_dir} ${reference_sample})
sage_somatic_tumor_sample_bqr_plot=$(locate_sage_bqr_plot ${run_dir} ${tumor_sample})
purple_purity_tsv=$(locate_purple_purity ${run_dir})
purple_qc_file=$(locate_purple_qc ${run_dir})
purple_gene_copy_number_tsv=$(locate_purple_gene_copynumbers ${run_dir})
purple_somatic_driver_catalog_tsv=$(locate_purple_somatic_driver_catalog ${run_dir})
purple_germline_driver_catalog_tsv=$(locate_purple_germline_driver_catalog ${run_dir})
purple_somatic_variant_vcf=$(locate_purple_somatic_variants ${run_dir})
purple_germline_variant_vcf=$(locate_purple_germline_variants ${run_dir})
purple_germline_deletion_tsv=$(locate_purple_germline_deletions ${run_dir})
purple_plot_directory=$(locate_purple_plot_directory ${run_dir})
linx_fusion_tsv=$(locate_linx_fusions ${run_dir})
linx_breakend_tsv=$(locate_linx_breakends ${run_dir})
linx_driver_catalog_tsv=$(locate_linx_driver_catalog ${run_dir})
linx_driver_tsv=$(locate_linx_drivers ${run_dir})
linx_germline_disruption_tsv=$(locate_linx_germline_disruptions ${run_dir})
linx_plot_directory=$(locate_linx_plot_directory ${run_dir})

lilac_result_csv=$(locate_lilac_results ${run_dir})
lilac_qc_csv=$(locate_lilac_qc ${run_dir})
if [[ ! -f ${lilac_result_csv} || ! -f ${lilac_qc_csv} ]]; then
    # TODO Remove once LILAC data has been generated for all runs
    warn "No LILAC output found. Falling back to empty LILAC output"
    lilac_result_csv="/data/resources/crunch/lilac/empty/empty.lilac.csv"
    lilac_qc_csv="/data/resources/crunch/lilac/empty/empty.lilac.qc.csv"
fi

rna_sample_cmd=""
isofox_gene_distribution_cmd=""
isofox_alt_sj_cohort_cmd=""
isofox_summary_cmd=""
isofox_gene_data_cmd=""
isofox_fusion_cmd=""
isofox_alt_splice_junction_cmd=""
if [[ -d "${run_dir}/isofox" ]]; then
    # TODO Make mandatory once all purple data can be annotated with RNA correctly.
    rna_sample_id="${tumor_sample}_RNA"
    if [[ $(zcat ${purple_somatic_variant_vcf} | grep -c ${rna_sample_id}) = 1 ]]; then
        rna_sample_cmd="-rna_sample_id ${rna_sample_id}"
    else
        warn "Isofox data is present but somatic vcf doesn't seem to be annotated with RNA data!"
    fi

    isofox_gene_distribution_cmd="-isofox_gene_distribution_csv $(locate_isofox_gene_distribution_csv)"
    isofox_alt_sj_cohort_cmd="-isofox_alt_sj_cohort_csv $(locate_isofox_alt_sj_cohort_csv)"
    isofox_summary_cmd="-isofox_summary_csv $(locate_isofox_summary ${run_dir})"
    isofox_gene_data_cmd="-isofox_gene_data_csv $(locate_isofox_gene_data ${run_dir})"
    isofox_fusion_cmd="-isofox_fusion_csv $(locate_isofox_pass_fusions ${run_dir})"
    isofox_alt_splice_junction_cmd="-isofox_alt_splice_junction_csv $(locate_isofox_alt_splice_junctions ${run_dir})"
fi

annotated_virus_tsv=$(locate_virus_annotation_tsv ${run_dir})
chord_prediction_txt=$(locate_chord_prediction ${run_dir})
if [[ -d "${run_dir}/cuppa_dna_rna" ]]; then
    cuppa_result_csv=$(locate_cuppa_dna_rna_result_csv ${run_dir})
    cuppa_summary_plot=$(locate_cuppa_dna_rna_summary_plot ${run_dir})
    cuppa_feature_plot=$(locate_cuppa_dna_rna_feature_plot ${run_dir})
else
    cuppa_result_csv=$(locate_cuppa_result_csv ${run_dir})
    cuppa_summary_plot=$(locate_cuppa_summary_plot ${run_dir})
    cuppa_feature_plot=$(locate_cuppa_feature_plot ${run_dir})
fi

cuppa_feature_plot_cmd=""
if [[ ! -z ${cuppa_feature_plot} ]]; then
    cuppa_feature_plot_cmd="-cuppa_feature_plot ${cuppa_feature_plot}"
fi

peach_genotype_tsv=$(locate_peach_prod_genotype ${run_dir})
protect_evidence_tsv=$(locate_protect_evidence ${run_dir})

java -jar ${orange_jar} \
    -tumor_sample_id ${tumor_sample} \
    -reference_sample_id ${reference_sample} \
    ${rna_sample_cmd} \
    -primary_tumor_doids ${primary_tumor_doids} \
    -ref_genome_version ${ref_genome_version} \
    -output_dir ${output_dir} \
    -doid_json ${doid_json} \
    -cohort_mapping_tsv ${cohort_mapping_tsv} \
    -cohort_percentiles_tsv ${cohort_percentiles_tsv} \
    -driver_gene_panel_tsv ${driver_gene_panel_tsv} \
    -known_fusion_file ${known_fusion_file} \
    ${isofox_gene_distribution_cmd} \
    ${isofox_alt_sj_cohort_cmd} \
    ${pipeline_version_cmd} \
    -ref_sample_wgs_metrics_file ${ref_sample_wgs_metrics_file} \
    -ref_sample_flagstat_file ${ref_sample_flagstat_file} \
    -tumor_sample_wgs_metrics_file ${tumor_sample_wgs_metrics_file} \
    -tumor_sample_flagstat_file ${tumor_sample_flagstat_file} \
    -sage_germline_gene_coverage_tsv ${sage_germline_gene_coverage_tsv} \
    -sage_somatic_ref_sample_bqr_plot ${sage_somatic_ref_sample_bqr_plot} \
    -sage_somatic_tumor_sample_bqr_plot ${sage_somatic_tumor_sample_bqr_plot} \
    -purple_purity_tsv ${purple_purity_tsv} \
    -purple_qc_file ${purple_qc_file} \
    -purple_gene_copy_number_tsv ${purple_gene_copy_number_tsv} \
    -purple_somatic_driver_catalog_tsv ${purple_somatic_driver_catalog_tsv} \
    -purple_germline_driver_catalog_tsv ${purple_germline_driver_catalog_tsv} \
    -purple_somatic_variant_vcf ${purple_somatic_variant_vcf} \
    -purple_germline_variant_vcf ${purple_germline_variant_vcf} \
    -purple_germline_deletion_tsv ${purple_germline_deletion_tsv} \
    -purple_plot_directory ${purple_plot_directory} \
    -linx_fusion_tsv ${linx_fusion_tsv} \
    -linx_breakend_tsv ${linx_breakend_tsv} \
    -linx_driver_catalog_tsv ${linx_driver_catalog_tsv} \
    -linx_driver_tsv ${linx_driver_tsv} \
    -linx_germline_disruption_tsv ${linx_germline_disruption_tsv} \
    -linx_plot_directory ${linx_plot_directory} \
    -lilac_result_csv ${lilac_result_csv} \
    -lilac_qc_csv ${lilac_qc_csv} \
    ${isofox_summary_cmd} \
    ${isofox_gene_data_cmd} \
    ${isofox_fusion_cmd} \
    ${isofox_alt_splice_junction_cmd} \
    -annotated_virus_tsv ${annotated_virus_tsv} \
    -chord_prediction_txt ${chord_prediction_txt} \
    -cuppa_result_csv ${cuppa_result_csv} \
    -cuppa_summary_plot ${cuppa_summary_plot} \
    ${cuppa_feature_plot_cmd} \
    -peach_genotype_tsv ${peach_genotype_tsv} \
    -protect_evidence_tsv ${protect_evidence_tsv} \
    "$@"