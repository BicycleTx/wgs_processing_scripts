#!/usr/bin/env bash

source locate_files || exit 1
source metadata_functions || exit 1
source api_functions || exit 1
source message_functions || exit 1
source io_functions || exit 1
source orange_extraction_functions || exit 1

run_dir=$1 && shift
output_dir=$1 && shift

if [[ -z "${run_dir}" || -z "${output_dir}" ]]; then
    error "Inputs missing. Exiting";
fi

orange_json="$(locate_orange_json ${run_dir})"

if [[ ! -f "${orange_json}" ]]; then
    error "Could not locate existing ORANGE json in ${run_dir}!"
fi

primary_tumor_doids=$(extract_primary_tumor_doids ${orange_json})
experiment_date=$(extract_experiment_date ${orange_json})

create_or_cleanup_dir ${output_dir}

orange_jar="$(locate_pilot_orange)"

doid_json="$(locate_doid_json)"
cohort_mapping_tsv="$(locate_cohort_mapping_tsv)"
cohort_percentiles_tsv="$(locate_cohort_percentiles_tsv)"
driver_gene_panel_tsv="$(locate_driver_gene_panel_37_tsv)"
known_fusion_file="$(locate_known_fusion_data_37_csv)"
ensembl_data_directory="$(locate_ensembl_data_dir_37)"

tumor_sample=$(load_tumor_sample_from_metadata ${run_dir})

ref_genome_version="37"

java -jar ${orange_jar} \
    -tumor_sample_id ${tumor_sample} \
    -primary_tumor_doids ${primary_tumor_doids} \
    -experiment_date ${collection_date} \
    -ref_genome_version ${ref_genome_version} \
    -output_dir "${output_dir}" \
    -doid_json "${doid_json}" \
    -cohort_mapping_tsv "${cohort_mapping_tsv}" \
    -cohort_percentiles_tsv "${cohort_percentiles_tsv}" \
    -driver_gene_panel_tsv "${driver_gene_panel_tsv}" \
    -known_fusion_file "${known_fusion_file}" \
    -ensembl_data_directory "${ensembl_data_directory}" \
    -add_disclaimer \
    -log_debug \
    "$@"