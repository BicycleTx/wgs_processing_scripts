#!/bin/bash

BAM_SLICER=/data/common/tools/bam-slicer_v1.3/bam-slicer.jar

SAMPLE=$1
BED_FILE=$2
OUTPUT_FILE=$3

if [ -z "$SAMPLE" ] || [ -z "$BED_FILE" ] || [ -z "$OUTPUT_FILE" ];
  then
    echo "Usage: $ ./bam_slicer sample bed_file output_file"
    echo "   sample	sample to search for. e.g CPCT11111111T"
    echo "   bed_file	bed file containing regions to be sliced"
    exit 1
fi

# MIVO: get validated somatic.ini/cpct.ini runs for this sample, sort in descending order of pipeline version then take first row
RUN_ROW=`query_sbp_api -type runs | grep -P "${SAMPLE}\t" | grep "hmf-output" | grep "Somatic.ini\|CPCT.ini" | grep "Validated\|SnpCheck\|Failed" | sort -bnrk8.2,8 | head -1`

if [ -z "$RUN_ROW" ];
  then
    echo "[ERROR] No runs found with a Somatic/CPCT .ini file for sample ${SAMPLE}. Exiting."
    exit 1
fi

NORMAL=${SAMPLE:0:12}R
RUN_NAME=`echo ${RUN_ROW} | cut -d ' ' -f1`
RUN_BUCKET=`echo ${RUN_ROW} | cut -d ' ' -f5`
BAM_KEY="$RUN_NAME/$NORMAL/mapping/${NORMAL}_dedup.realigned.bam"
BAM_INDEX_KEY="${BAM_KEY}.bai"

run_bam_slicer() {
   BAM_INDEX_PARAM=$1
   java -Xmx8G \
     -jar ${BAM_SLICER} \
     -s3 \
     -bucket ${RUN_BUCKET} \
     -input ${BAM_KEY} \
     -index ${BAM_INDEX_PARAM} \
     -bed ${BED_FILE} \
     -output ${OUTPUT_FILE} \
     -max_chunks 2000 \
     -max_concurrent_requests 30
}

if ! run_bam_slicer ${BAM_INDEX_KEY};
then
     echo "[INFO] Slicing with index ${BAM_INDEX_KEY} failed"
     BAM_INDEX_KEY="${BAM_KEY%.*}.bai"
     echo "[INFO] Retrying with index ${BAM_INDEX_KEY}"
     run_bam_slicer ${BAM_INDEX_KEY}
fi