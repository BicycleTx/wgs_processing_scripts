#!/usr/bin/env bash

source sbp_api_functions

set_name=$1 && shift
bed_file=$1 && shift
output_file=$1 && shift
type=$1 && shift

bam_slicer_jar=/data/common/tools/bam-slicer_v1.3/bam-slicer.jar
GCP_URL_SCRIPT="generate_signed_gcp_url.py"
GCP_KEY_FILE="/data/common/dbs/gcp_credentials/hmf-download"

if [ -z "$set_name" ]; then
    echo "[ERROR] No set provided. Exiting" && exit 1
fi

## query run info
run_info=$(load_run_info_for_set ${set_name})

## setup all variables
pipeline=$(echo "$run_info" | cut -d ' ' -f8)
  bucket=$(echo "$run_info" | cut -d ' ' -f5)
   name=$(echo "$run_info" | cut -d ' ' -f1)
    ref=$(echo "$run_info" | cut -d ' ' -f3)
    tum=$(echo "$run_info" | cut -d ' ' -f4)

if [ $type = "REF" ]
then
    sample=$ref
else
    sample=$tum
fi

bamPrefix="${bucket}/${name}/${sample}"

if [[ $pipeline = v5* ]]
then
    bam="${bamPrefix}/aligner/${sample}.bam"
else
    bam="${bamPrefix}/mapping/${sample}_dedup.realigned.bam"
fi

internal_bam_url="gs://${bam}"
external_bam_url=$( ${GCP_URL_SCRIPT} "${GCP_KEY_FILE}" "${bam}" 604800)
echo "$(date +"%H:%M:%S") - [INFO ] - GCP Internal BAM URL: ${internal_bam_url}"
#echo "$(date +"%H:%M:%S") - [INFO ] - GCP External BAM URL: ${external_bam_url}"

bai=${bam}.bai
internal_bai_url="gs://${bai}"
external_bai_url=$( ${GCP_URL_SCRIPT} "${GCP_KEY_FILE}" "${bai}" 604800)
echo "$(date +"%H:%M:%S") - [INFO ] - GCP Internal BAI URL: ${internal_bai_url}"
#echo "$(date +"%H:%M:%S") - [INFO ] - GCP External BAI URL: ${external_bai_url}"

java -Xmx8G -jar ${bam_slicer_jar} \
    -url \
    -input ${external_bam_url} \
    -index ${external_bai_url} \
    -bed ${bed_file} \
    -output ${output_file} \
    -max_chunks 2000 \
    -max_concurrent_requests 30