#!/bin/bash

run_dir=$1 && shift
run=$(basename ${run_dir})

credentials=/data/common/tools/patient-db_v1.0/credentials
db_user=$(awk '/^user/ {print $2}' ${credentials})
db_pass=$(awk '/^pass/ {print $2}' ${credentials})
db_url=mysql://localhost:3306/hmfpatients?serverTimezone=CET
purple_jar=/data/common/tools/purple_v1.0/purple-1.0.jar
gc_profile=/data/common/tools/purple_v1.0/GC_profile.1000bp.cnp

purple_output=${run_dir}/purple
full_vcf_file=${run_dir}/${run}.annotated.vcf
sliced_vcf_file=${run_dir}/${run}.annotated_sliced.vcf
fasta_file=/data/common/refgenomes/Homo_sapiens.GRCh37.decoys/hs37d5.fasta
bed_file=/data/common/dbs/CytoScanHD/CytoScanHD_hg19_SNPs_sorted.bed

if [[ ! -e ${full_vcf_file} ]]; then
    echo "Unable to locate VCF file" ${full_vcf_file}
    exit 1
fi

mkdir -p ${purple_output}

if [[ ! -e ${sliced_vcf_file} ]]; then
    echo "Creating sliced file" ${sliced_vcf_file}
    java -jar /data/common/tools/gatk_v3.4.46/GenomeAnalysisTK.jar -T SelectVariants -V ${full_vcf_file} -selectType SNP -o ${sliced_vcf_file} -R ${fasta_file} -L ${bed_file}
else
	echo "Using existing sliced file" ${sliced_vcf_file}    
fi

somatic_vcf=$(ls ${run_dir}/somaticVariants/*/*melted_consensus_filtered_pon.vcf)
if [ $? -ne 0 ]
then
	echo "Unable to locate somatic VCF. Exiting"
	exit 1
fi

structural_vcf=$(ls ${run_dir}/structuralVariants/manta/*/results/variants/somaticSV.vcf.gz)
if [ $? -ne 0 ]
then
	echo "Unable to locate structural VCF. Exiting"
	exit 1
fi

exec java -Dorg.jooq.no-logo=true -Xmx8G -Xms4G \
    -jar ${purple_jar} \
    -threads 3 \
    -somatic_vcf ${somatic_vcf} \
    -structural_vcf ${structural_vcf} \
    -baf_vcf ${sliced_vcf_file} \
    -circos /data/common/tools/circos_v0.69.5/bin/circos
    -gc_profile ${gc_profile} \
    -run_dir $run_dir \
    -db_enabled -db_user ${db_user} -db_pass ${db_pass} -db_url ${db_url} \
    $@
