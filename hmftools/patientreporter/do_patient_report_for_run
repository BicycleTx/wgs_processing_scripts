#!/usr/bin/env bash

source locate_files
source metadata_functions
source lims_functions

run_dir=$1 && shift

if [[ -z "${run_dir}" ]]; then
    echo "[ERROR] No run dir provided. Exiting" && exit 1;
fi

tumor_sample=$(load_tumor_sample_from_metadata ${run_dir})
tumor_sample_barcode=$(load_tumor_sample_barcode_from_metadata ${run_dir})

if [[ -z "${tumor_sample_barcode}" ]]; then
    echo "[INFO] Could not load tumor sample barcode from metadata. Attempt to resolve from LIMS."
    tumor_sample_barcode=$(find_barcode_for_sample_name ${tumor_sample})
fi

ref_sample=$(load_ref_sample_from_metadata ${run_dir})
ref_sample_barcode=$(load_ref_sample_barcode_from_metadata ${run_dir})

if [[ -z "${ref_sample_barcode}" ]]; then
    echo "[INFO] Could not load ref sample barcode from metadata. Attempting to resolve from LIMS."
    ref_sample_barcode=$(find_ref_barcode_for_sample_name ${tumor_sample})
fi

if [[ -z "${ref_sample}" || -z "${ref_sample_barcode}" || -z "${tumor_sample_barcode}" ]]; then
    echo "[ERROR] Incomplete information for reporter. Exiting"
    echo "  ref_sample name: ${ref_sample}"
    echo "  ref sample barcode: ${ref_sample_barcode}"
    echo "  tumor_sample name: ${tumor_sample}"
    echo "  tum sample barcode: ${tumor_sample_barcode}"
    exit 1;
fi

output_dir_data_report=${run_dir}/patient_report_prod_data
if [[ ! -d "${output_dir_data_report}" ]]; then
    echo "[INFO] ${output_dir_data_report} does not exist yet, creating..."
    mkdir ${output_dir_data_report}
fi

purple_purity_tsv=$(locate_purple_purity ${run_dir})
purple_qc_file=$(locate_purple_qc ${run_dir})
purple_driver_catalog_tsv=$(locate_purple_drivers ${run_dir})
purple_somatic_variant_vcf=$(locate_purple_somatics ${run_dir})
bachelor_tsv=$(locate_reportable_bachelor_variants ${run_dir})
linx_fusion_tsv=$(locate_linx_fusions ${run_dir})
linx_breakend_tsv=$(locate_linx_breakends ${run_dir})
linx_viral_insertion_tsv=$(locate_linx_viral_insertions ${run_dir})
linx_drivers_tsv=$(locate_linx_drivers ${run_dir})
chord_prediction_txt=$(locate_chord_prediction ${run_dir})
circos_file=$(locate_purple_circos_plot ${run_dir})

knowledgebase_dir=/data/common/dbs/knowledgebases/output
germline_reporting_tsv=/data/common/dbs/germline_reporting/germline_reporting.tsv
sample_summary_tsv=/data/common/dbs/summary_patient_report/summary_samples.tsv

do_run_base_patient_reporter \
    -ref_sample_id ${ref_sample} \
    -ref_sample_barcode ${ref_sample_barcode} \
    -tumor_sample_id ${tumor_sample} \
    -tumor_sample_barcode ${tumor_sample_barcode} \
    -purple_purity_tsv ${purple_purity_tsv} \
    -purple_qc_file ${purple_qc_file} \
    -purple_driver_catalog_tsv ${purple_driver_catalog_tsv} \
    -purple_somatic_variant_vcf ${purple_somatic_variant_vcf} \
    -bachelor_tsv ${bachelor_tsv} \
    -linx_fusion_tsv ${linx_fusion_tsv} \
    -linx_breakend_tsv ${linx_breakend_tsv} \
    -linx_viral_insertion_tsv ${linx_viral_insertion_tsv} \
    -linx_drivers_tsv ${linx_drivers_tsv} \
    -chord_prediction_txt ${chord_prediction_txt} \
    -circos_file ${circos_file} \
    -knowledgebase_dir ${knowledgebase_dir} \
    -germline_reporting_tsv ${germline_reporting_tsv} \
    -sample_summary_tsv ${sample_summary_tsv} \
    -output_dir_data_report ${output_dir_data_report} \
    "$@"
