#!/usr/bin/env bash

source message_functions || exit 1

tumor_sample_or_run_dir=$1 && shift
qc_fail_reason=$1 && shift

if [[ -z "${tumor_sample_or_run_dir}" ]]; then
    error "No tumor sample or run dir provided. Exiting"
fi

if [[ -z "${qc_fail_reason}" ]]; then
    error "No QC fail reason provided. Exiting"
fi

# Additional comments are not passed along since comments already used for indicating a pilot report.
if [[ ${qc_fail_reason} == "insufficient_dna" ]]; then
    pilot_insufficient_dna_report ${tumor_sample_or_run_dir} -corrected_report "$@"
elif [[ ${qc_fail_reason} == "sufficient_tcp_qc_failure" ]]; then
    pilot_sufficient_tcp_qc_failure_report ${tumor_sample_or_run_dir} -corrected_report "$@"
elif [[ ${qc_fail_reason} == "insufficient_tcp_shallow_wgs" ]]; then
    pilot_insufficient_tcp_shallow_wgs_report ${tumor_sample_or_run_dir} -corrected_report "$@"
elif [[ ${qc_fail_reason} == "insufficient_tcp_deep_wgs" ]]; then
    pilot_insufficient_tcp_deep_wgs_report ${tumor_sample_or_run_dir} -corrected_report "$@"
elif [[ ${qc_fail_reason} == "technical_failure" ]]; then
    pilot_technical_failure_report ${tumor_sample_or_run_dir} -corrected_report "$@"
else
    warn "Did not recognize QC Fail reason: ${qc_fail_reason}. Skipping"
fi
