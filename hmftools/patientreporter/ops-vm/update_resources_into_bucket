#!/usr/bin/env bash

source message_functions || exit 1
source locate_files || exit 1

colo_log_file=$1 && shift

info "Starting to generate the oncoAct and oncoPanel data to the resources gcp bucket"

currentDate=$(date +'%Y%m%d')
external_link_resources_dir="/data/resources/external_link/"
achive_dir="${external_link_resources_dir}/${currentDate}_patient_report_resources"
archive_dir_oncoact="${achive_dir}/oncoact"
archive_dir_oncopanel="${achive_dir}/oncopanel"
mkdir ${achive_dir}
mkdir ${archive_dir_oncoact}
mkdir ${archive_dir_oncopanel}

# generate image of using pipeline
info "Generating pipeline image data..."
imageInformation=$(collect_report_resources_for_pipeline_release -l ${colo_log_file})
image=$(echo ${imageInformation} | grep "Image name found" | awk '{print $NF}')
project=$(echo ${imageInformation} | grep "Image project found" | awk '{print $NF}')

git_clone_dir="${external_link_resources_dir}/common-resources-public"
gcloud --project "${project}" source repos clone common-resources-public ${git_clone_dir}
git checkout "git_clone_dir/${image}"
git branch -l
info "Pipeline image data of ${image} is extracted"

#files oncoact
info "Collecting oncoAct data"
hmf_fusion_panel_changelist_csv="${git_clone_dir}/fusions/fusion_changelist.csv"
hmf_funsion_panel_csv="${git_clone_dir}/fusions/37/known_fusion_data.37.csv"
hmf_gene_panel_changelist_csv="${git_clone_dir}/gene_panel/DriverGenePanel_changelist.tsv"
hmf_gene_panel_csv="${git_clone_dir}/gene_panel/37/DriverGenePanel.37.tsv"
virus_reporting_db_tsv="${git_clone_dir}/virus_interpreter/virus_reporting_db.tsv"
oncoact_report_pdf="${external_link_resources_dir}/hmf_oncoact.pdf"
taxonomy_db_tsv="${git_clone_dir}/virus_interpreter/taxonomy_db.tsv"
germline_reporting_tsv=$(locate_germline_reporting_prod)
hmf_pgx_haplotypes="${git_clone_dir}/peach/haplotypes.tsv"
hmf_pgx_variants_tsv="${git_clone_dir}/peach/variants.tsv"
hmf_pgx_drugs_tsv="${git_clone_dir}/peach/drugs.tsv"
gene_transcripts=""
onocoact_readme="${external_link_resources_dir}/oncoact_readme.txt"

if [[ -z "${hmf_fusion_panel_changelist_csv}" ]]; then
        error "Unable to locate fusion panel changelist csv file."
fi

if [[ -z "${hmf_funsion_panel_csv}" ]]; then
        error "Unable to locate funsion panel csv file."
fi

if [[ -z "${hmf_gene_panel_changelist_csv}" ]]; then
        error "Unable to locate gene panel changelist csv file."
fi

if [[ -z "${hmf_gene_panel_csv}" ]]; then
        error "Unable to locate gene panel csv file."
fi
if [[ -z "${virus_reporting_db_tsv}" ]]; then
        error "Unable to locate virus reporting db tsv file."
fi

if [[ -z "${oncoact_report_pdf}" ]]; then
        error "Unable to locate oncoact report pdf file."
fi

if [[ -z "${taxonomy_db_tsv}" ]]; then
        error "Unable to locate taxonomy db tsv file."
fi

if [[ -z "${germline_reporting_tsv}" ]]; then
        error "Unable to locate germline reporting tsv file."
fi

if [[ -z "${hmf_pgx_haplotypes}" ]]; then
        error "Unable to locate pgx haplotypes file."
fi

if [[ -z "${hmf_pgx_variants_tsv}" ]]; then
        error "Unable to locate pgx variants tsv file."
fi

if [[ -z "${hmf_pgx_drugs_tsv}" ]]; then
        error "Unable to locate pgx drugs tsv file."
fi

if [[ -z "${gene_transcripts}" ]]; then
        error "Unable to locate gene transcripts tsv file."
fi

if [[ -z "${onocoact_readme}" ]]; then
        error "Unable to locate onocoact readme file."
fi


# Copy oncoact data to the archive dir
cp ${hmf_fusion_panel_changelist_csv} ${archive_dir_oncoact}
cp ${hmf_funsion_panel_csv} ${archive_dir_oncoact}
cp ${hmf_gene_panel_changelist_csv} ${archive_dir_oncoact}
cp ${hmf_gene_panel_csv} ${archive_dir_oncoact}
cp ${virus_reporting_db_tsv} ${archive_dir_oncoact}
cp ${oncoact_report_pdf} ${archive_dir_oncoact}
cp ${taxonomy_db_tsv} ${archive_dir_oncoact}
cp ${germline_reporting_tsv} ${archive_dir_oncoact}
cp ${hmf_pgx_haplotypes} ${archive_dir_oncoact}
cp ${hmf_pgx_variants_tsv} ${archive_dir_oncoact}
cp ${hmf_pgx_drugs_tsv} ${archive_dir_oncoact}
cp ${gene_transcripts} ${archive_dir_oncoact}
cp ${onocoact_readme} ${archive_dir_oncoact}

#files onocpanel
info "Collecting oncoPanel data"

onco_panel_genes_tsv=
onco_panel_vcf_header_definitions=
oncopanel_report_pdf="${external_link_resources_dir}/hmf_oncoact.pdf"
oncopanel_readme="${external_link_resources_dir}/oncopanel_readme.txt"

if [[ -z "${onco_panel_genes_tsv}" ]]; then
        error "Unable to locate onco panel genes tsv file."
fi

if [[ -z "${onco_panel_vcf_header_definitions}" ]]; then
        error "Unable to locate onco panel vcf header definitions file."
fi

if [[ -z "${oncopanel_report_pdf}" ]]; then
        error "Unable to locate oncopanel report pdf file."
fi

if [[ -z "${oncopanel_readme}" ]]; then
        error "Unable to locate oncopanel readme file."
fi

## Copy oncopanel data to the archive dir
cp ${onco_panel_genes_tsv} ${archive_dir_oncopanel}
cp ${onco_panel_vcf_header_definitions} ${archive_dir_oncopanel}
cp ${oncopanel_report_pdf} ${archive_dir_oncopanel}
cp ${oncopanel_readme} ${archive_dir_oncopanel}

## Zipping the dir
info "Zipping the oncoPanel and OncoAct data"
oncoact_zip="${external_link_resources_dir}/oncoact.zip"
oncopanel_zip="${external_link_resources_dir}/oncopanel.zip"
zip -r ${oncoact_zip} ${archive_dir_oncoact}
zip -r ${oncopanel_zip} ${archive_dir_oncopanel}

# copy data to bucket
info "Copy the oncoAct data to the gcp bucket"
bucket="hmf-public"
path_oncoact="OncoAct-Resources"
gcp_url_oncoact="https://storage.googleapis.com/${bucket}/${path_oncoact}"
gsutil cp ${oncoact_zip} ${gcp_url_oncoact}

info "Copy the oncoPanel data to the gcp bucket"
path_oncopanel="OncoPanel-Resources"
gcp_url_oncopanel="https://storage.googleapis.com/${bucket}/${path_oncopanel}"
gsutil cp ${oncopanel_zip} ${gcp_url_oncopanel}

#Deleting git clone
rm -r ${git_clone_dir}

info "Complete"