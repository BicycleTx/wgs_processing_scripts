#!/usr/bin/env bash

source locate_files || exit 1
source metadata_functions || exit 1
source lims_functions || exit 1
source message_functions || exit 1
source api_functions || exit 1

run_dir=$1 && shift

if [[ -z "${run_dir}" ]]; then
    error "No run dir provided. Exiting"
fi

tumor_sample=$(load_tumor_sample_from_metadata ${run_dir})
tumor_sample_barcode=$(load_tumor_sample_barcode_from_metadata ${run_dir})

if [[ -z "${tumor_sample_barcode}" ]]; then
    info "Could not load tumor sample barcode from metadata. Attempt to resolve from LIMS."
    tumor_sample_barcode=$(find_barcode_for_sample_name ${tumor_sample})
fi

ref_sample=$(load_ref_sample_from_metadata ${run_dir})
ref_sample_barcode=$(load_ref_sample_barcode_from_metadata ${run_dir})

if [[ -z "${ref_sample_barcode}" ]]; then
    info "Could not load ref sample barcode from metadata. Attempting to resolve from LIMS."
    ref_sample_barcode=$(find_ref_barcode_for_sample_name ${tumor_sample})
fi

if [[ -z "${ref_sample}" || -z "${ref_sample_barcode}" || -z "${tumor_sample_barcode}" ]]; then
    warn "Incomplete information for reporter. Exiting"
    warn "  ref_sample name: ${ref_sample}"
    warn "  ref sample barcode: ${ref_sample_barcode}"
    warn "  tumor_sample name: ${tumor_sample}"
    warn "  tum sample barcode: ${tumor_sample_barcode}"
    exit 1;
fi

pipeline_version_file=${run_dir}/pipeline.version
purple_purity_tsv=$(locate_purple_purity ${run_dir})
purple_qc_file=$(locate_purple_qc ${run_dir})
purple_somatic_driver_catalog_tsv=$(locate_purple_somatic_driver_catalog ${run_dir})
purple_germline_driver_catalog_tsv=$(locate_purple_germline_driver_catalog ${run_dir})
purple_somatic_variant_vcf=$(locate_purple_somatic_variants ${run_dir})
purple_germline_variant_vcf=$(locate_purple_germline_variants ${run_dir})
purple_somatic_copynumber_tsv=$(locate_purple_somatic_copynumber_tsv ${run_dir})
purple_circos_plot=$(locate_purple_circos_plot ${run_dir})
linx_fusion_tsv=$(locate_linx_fusions ${run_dir})
linx_breakend_tsv=$(locate_linx_breakends ${run_dir})
linx_driver_catalog_tsv=$(locate_linx_driver_catalog ${run_dir})
chord_prediction_txt=$(locate_chord_prediction ${run_dir})
molecular_tissue_origin_txt=$(locate_cuppa_conclusion_txt ${run_dir})
molecular_tissue_origin_plot=$(locate_cuppa_conclusion_plot ${run_dir})
virus_breakend_tsv=$(locate_virus_breakend_tsv ${run_dir})
peach_genotype_tsv=$(locate_peach_genotype_prod_tsv ${run_dir})
protect_evidence_tsv=$(locate_protect_evidence ${run_dir})

germline_reporting_tsv=/data/dbs/germline_reporting/germline_reporting.tsv
sample_summary_tsv=/data/dbs/summary_patient_report/summary_samples.tsv
taxonomy_db_tsv=/data/dbs/virus_interpreter/taxonomy_db.tsv
virus_interpretation_tsv=/data/dbs/virus_interpreter/virus_interpretation.tsv
virus_blacklist_tsv=/data/dbs/virus_interpreter/virus_blacklist.tsv

output_dir_report=${HOME}/reports

patient_reporter_jar=/data/tools/patientreporter/7.23/patient-reporter.jar

reporting_db_tsv=$(locate_reporting_db_generate_tsv)
primary_tumor_tsv=/data/dbs/clinical_data/curated_primary_tumor.tsv
lims_dir=/data/ops/lims/prod

rva_logo=/data/dbs/patient_reporter_images/L633_l_testlaboratoria_rva_en_color.jpeg
company_logo=/data/dbs/patient_reporter_images/hartwig_logo.jpg
signature=/data/dbs/patient_reporter_images/signature_edwin_transparant.png

expected_pipeline_version=$(extract_expected_pipeline_version)

output_dir_data=${run_dir}/patient_report_prod_data
if [[ ! -d "${output_dir_data}" ]]; then
    info "${output_dir_data} does not exist yet, creating..."
    mkdir ${output_dir_data}
fi

java -jar ${patient_reporter_jar} \
    -output_dir_report ${output_dir_report} \
            -output_dir_data ${output_dir_data_report} \
            -ref_sample_id ${ref_sample} \
            -ref_sample_barcode ${ref_sample_barcode} \
            -tumor_sample_id ${sample} \
            -tumor_sample_barcode ${barcode} \
            -pipeline_version_file ${pipeline_version_file} \
            -purple_purity_tsv ${purple_purity_tsv} \
            -purple_qc_file ${purple_qc_file} \
            -purple_somatic_driver_catalog_tsv ${purple_somatic_driver_catalog_tsv} \
            -purple_germline_driver_catalog_tsv ${purple_germline_driver_catalog_tsv} \
            -purple_somatic_variant_vcf ${purple_somatic_variant_vcf} \
            -purple_germline_variant_vcf ${purple_germline_variant_vcf} \
            -purple_somatic_copynumber_tsv ${purple_somatic_copynumber_tsv} \
            -purple_circos_plot ${purple_circos_plot} \
            -linx_fusion_tsv ${linx_fusion_tsv} \
            -linx_breakend_tsv ${linx_breakend_tsv} \
            -linx_driver_catalog_tsv ${linx_driver_catalog_tsv} \
            -chord_prediction_txt ${chord_prediction_txt} \
            -molecular_tissue_origin_txt ${molecular_tissue_origin_txt} \
            -molecular_tissue_origin_plot ${molecular_tissue_origin_plot} \
            -virus_breakend_tsv ${virus_breakend_tsv} \
            -peach_genotype_tsv ${peach_genotype_tsv} \
            -protect_evidence_tsv ${protect_evidence_tsv} \
            -germline_reporting_tsv ${germline_reporting_tsv} \
            -sample_summary_tsv ${sample_summary_tsv} \
            -taxonomy_db_tsv ${taxonomy_db_tsv} \
            -virus_interpretation_tsv ${virus_interpretation_tsv} \
            -primary_tumor_tsv ${primary_tumor_tsv} \
                -lims_dir ${lims_dir} \
                -rva_logo ${rva_logo} \
                -company_logo ${company_logo} \
                -signature ${signature} \
                -expected_pipeline_version ${expected_pipeline_version} \
            -virus_blacklist_tsv ${virus_blacklist_tsv} "$@"
    "$@"
