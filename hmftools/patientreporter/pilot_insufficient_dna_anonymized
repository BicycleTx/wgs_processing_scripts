#!/usr/bin/env bash

source locate_files || exit 1
source metadata_functions || exit 1
source lims_functions || exit 1
source message_functions || exit 1
source api_functions || exit 1

sample_id=$1 && shift
# output_dir_report=/data/tmp/210907_david_DEV-2140_anonymyzation-patientreporter/
patient_reporter_jar=/data/tmp/210907_david_DEV-2140_anonymyzation-patientreporter/patient-reporter-7.24-jar-with-dependencies.jar

reporting_db_tsv=$(locate_reporting_db_tsv_pilot)
primary_tumor_tsv=/data/common/dbs/clinical_data/curated_primary_tumor.tsv
lims_dir=/data/ops/lims/prod

rva_logo=/data/common/dbs/patient_reporter_images/L633_l_testlaboratoria_rva_en_color.jpeg
company_logo=/data/common/dbs/patient_reporter_images/hartwig_logo.jpg
signature=/data/common/dbs/patient_reporter_images/signature_edwin_transparant.png


if [[ -z "${sample_id}" ]]; then
    error "No run dir provided. Exiting";
fi

tumor_sample_run_id=$(load_tumor_sample_from_metadata "${sample_id}")
tumor_sample_barcode=$(load_tumor_sample_barcode_from_metadata "${sample_id}")

if [[ -z "${tumor_sample_barcode}" ]]; then
    info "Could not load tumor sample barcode from metadata. Attempt to resolve from LIMS."
    tumor_sample_barcode=$(sample_id "${tumor_sample_run_id}")
fi

ref_sample_run_id=$(load_ref_sample_from_metadata "${sample_id}")
ref_sample_barcode=$(load_ref_sample_barcode_from_metadata "${sample_id}")

if [[ -z "${ref_sample_barcode}" ]]; then
    info "Could not load ref sample barcode from metadata. Attempting to resolve from LIMS."
    ref_sample_barcode=$(find_ref_barcode_for_sample_name "${tumor_sample_run_id}")
fi

if [[ "${tumor_sample_barcode}" == "COLO829V003TVAL" ]]; then
  tumor_sample="COLO829v003T"
else
  tumor_sample=$(load_sample_name_for_barcode "${tumor_sample_barcode}")
fi
if [[ "${ref_sample_barcode}" == "COLO829V003RVAL" ]]; then
  ref_sample="COLO829v003R"
else
  ref_sample=$(load_sample_name_for_barcode "${ref_sample_barcode}")
fi

if [[ -z "${ref_sample}" || -z "${ref_sample_run_id}" || -z "${ref_sample_barcode}" \
          || -z "${tumor_sample}" || -z "${tumor_sample_run_id}" || -z "${tumor_sample_barcode}" ]]; then
    warn "Incomplete information for reporter. Exiting"
    warn "  ref_sample name: ${ref_sample}"
    warn "  ref_sample run id: ${ref_sample_run_id}"
    warn "  ref sample barcode: ${ref_sample_barcode}"
    warn "  tumor_sample name: ${tumor_sample}"
    warn "  tumor_sample run id: ${tumor_sample_run_id}"
    warn "  tum sample barcode: ${tumor_sample_barcode}"
    exit 1;
fi

output_dir_data=${sample_id}/patient_report_pilot_data
if [[ ! -d "${output_dir_data}" ]]; then
    info "${output_dir_data} does not exist yet, creating..."
    mkdir "${output_dir_data}"
fi

expected_pipeline_version="5.22"

java -jar "${patient_reporter_jar}" \
    -reporting_db_tsv "${reporting_db_tsv}" \
    -primary_tumor_tsv ${primary_tumor_tsv} \
    -lims_dir ${lims_dir} \
    -rva_logo ${rva_logo} \
    -company_logo ${company_logo} \
    -signature ${signature} \
    -expected_pipeline_version ${expected_pipeline_version} \
    -override_pipeline_version \
    -output_dir_data "/data/cpct/qc_fail_reports_data/pilot/" \
    -output_dir_report "/data/cpct/pilot_reports" \
    -qc_fail \
    -qc_fail_reason "insufficient_dna" \
    -tumor_sample_id "${tumor_sample}" \
    -tumor_sample_run_id "${tumor_sample_run_id}" \
    -tumor_sample_barcode "${tumor_sample_barcode}" \
    -ref_genome_version 37 \
    -log_debug \
    "$@"