#!/usr/bin/env bash

source load_metadata

run_dir=$1 && shift
bachelor_output_dir=$1 && shift
bachelor_config=$1 && shift
credentials=$1 && shift
bachelor_jar=$1 && shift
bachelor_pp_jar=$1 && shift

# Database details
db_user=$(awk '/^user/ {print $2}' ${credentials})
db_pass=$(awk '/^pass/ {print $2}' ${credentials})
db_url=$(awk '/^url/ {print $2}' ${credentials})

# Load meta data
sample=$(load_tumor_sample_from_metadata ${run_dir})
set=$( basename ${run_dir})

# File Locations
clinvar_filters=/data/common/dbs/bachelor/BACHELOR_CLINVAR_FILTERS.csv
bach_run_dir=${run_dir}
bach_output_dir=${run_dir}/${bachelor_output_dir}/

if [ ! -d "${bach_output_dir}" ]; then
    echo "[INFO] ${bach_output_dir} does not exist yet, creating..."
    mkdir ${bach_output_dir}
fi

echo "[INFO] Running Bachelor"

java -Xmx8G -Xms4G -jar ${bachelor_jar} \
    -run_mode VcfParse \
    -sample ${sample} \
    -xml_config ${bachelor_config} \
    -ext_filter_file ${clinvar_filters} \
    -sample_data_dir ${run_dir} \
    -log_debug

# Slice BAM files using the bachelor bed file just created
bed_file=${bach_output_dir}/bachelor_bed.csv

if [ -f ${bed_file} ]; then
    echo "[INFO] Slicing BAM files and writing to ${bach_output_dir}"

    bed_based_bam_slicer ${set} ${bed_file} ${bach_output_dir}

    if [ ! "$(ls -A ${bach_output_dir}/*bam)" ]; then
        echo "[ERROR] BAM slicing failed"
        exit
    fi
else
    echo "[INFO] No bachelor eligible germline variants found. Exiting."
    touch ${bach_output_dir}/bachelor_found_no_variants
    exit
fi

echo "[INFO] Creating Pile-ups"

ref_genome_file=/data/common/refgenomes/Homo_sapiens.GRCh37.GATK.illumina/Homo_sapiens.GRCh37.GATK.illumina.fasta

# Run Mini Pileup on these bam files
file_index=1
for bam_file in ${bach_output_dir}/*bam; do
    mpu_file="${bach_output_dir}${sample}_${file_index}.mpu"
    echo "[INFO] Creating mini-pileup ${mpu_file} based on ${bam_file}"

    sambamba mpileup \
        -t 1 ${bam_file} \
        --samtools "-q 1 -f ${ref_genome_file}" \
        -L ${bed_file} \
        > ${mpu_file}

    file_index=$(( file_index + 1 ))
done

echo "[INFO] Post-processing germline variants"

bach_data_file=${bach_output_dir}/bachelor_output.csv
high_conf_bed=/data/common/dbs/GIAB_NIST_v3.2.2/NA12878_GIAB_highconf_IllFB-IllGATKHC-CG-Ion-Solid_ALLCHROM_v3.2.2_highconf.bed.gz
purple_sub_dir=purple

java -Dorg.jooq.no-logo=true -Xmx8G -Xms4G \
    -jar ${bachelor_jar} \
    -run_mode PostProcess \
    -sample ${sample} \
    -db_user ${db_user} -db_pass ${db_pass} -db_url ${db_url} \
    -sample_data_dir ${run_dir} \
    -purple_data_dir ${purple_sub_dir} \
    -high_confidence_bed ${high_conf_bed} \
    -ref_genome ${ref_genome_file} \
    -write_to_db \
    $@