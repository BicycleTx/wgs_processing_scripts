#!/usr/bin/env bash

source load_metadata

run_dir=$1 && shift
credentials=$1 && shift
bachelor_jar=$1 && shift
bachelor_pp_jar=$1 && shift

# CHSH: Database details
db_user=$(awk '/^user/ {print $2}' ${credentials})
db_pass=$(awk '/^pass/ {print $2}' ${credentials})
db_url=$(awk '/^url/ {print $2}' ${credentials})

# CHSH: Load meta data
sample=$(load_tumor_sample_from_metadata ${run_dir})

# CHSH: File Locations
lynparza_config=/data/common/dbs/bachelor/lynparza_20180503.xml
bach_run_dir=${run_dir}
bach_output_dir=${run_dir}/bachelor/
if [ $? -ne 0 ]
then
    echo "[ERROR] Unable to locate germline variants. Exiting."
    exit 1
fi

if [ ! -d "${bach_output_dir}" ]; then
    echo "[INFO] Creating Bachelor output dir"
    mkdir ${bach_output_dir}
fi

echo "[INFO] Running Bachelor"

java -Xmx8G -Xms4G -jar ${bachelor_jar} \
    -sample ${sample} \
    -configXml "$lynparza_config" \
    -germline \
    -runDirectory ${bach_run_dir} \
    -output_dir ${bach_output_dir} \
    -log_debug \
    $@

# CHSH: Slice BAM files using the bachelor bed file just created
bed_file=${bach_output_dir}/bachelor_bed.csv

if [ -f ${bed_file} ]; then
    echo "[INFO] Slicing BAM files and writing to ${bach_output_dir}"

    bed_based_bam_slicer ${bed_file} ${bach_output_dir}

    if [ ! "$(ls -A ${bach_output_dir}/*bam)" ]; then
        echo "[ERROR] BAM slicing failed"
        exit
    fi
else
    echo "[INFO] No bachelor eligible germline variants found. Exiting."
    touch ${bach_output_dir}/bachelor_found_no_variants
    exit
fi

echo "[INFO] Creating Pile-ups"

ref_genome_file=/data/common/refgenomes/Homo_sapiens.GRCh37.GATK.illumina/Homo_sapiens.GRCh37.GATK.illumina.fasta

# CHSH: Run Mini Pileup on these bam files
file_index=1
for bam_file in ${bach_output_dir}/*bam; do
    mpu_file="${bach_output_dir}${sample}_${file_index}.mpu"
    echo "[INFO] Creating mini-pileup ${mpu_file} based on ${bam_file}"

    sambamba mpileup \
        -t 1 ${bam_file} \
        --samtools "-q 1 -f ${ref_genome_file}" \
        -L ${bed_file} \
        > ${mpu_file}

    file_index=$(( file_index + 1 ))
done

echo "[INFO] Post-processing germline variants"

bach_data_file=${bach_output_dir}/bachelor_output.csv
high_conf_bed=/data/common/dbs/GIAB_NIST_v3.2.2/NA12878_GIAB_highconf_IllFB-IllGATKHC-CG-Ion-Solid_ALLCHROM_v3.2.2_highconf.bed.gz
vcf_header=/data/common/dbs/bachelor/sample_bachelor_header.vcf

java -Dorg.jooq.no-logo=true -Xmx8G -Xms4G \
    -jar ${bachelor_pp_jar} \
    -sample ${sample} \
    -db_user ${db_user} -db_pass ${db_pass} -db_url ${db_url} \
    -bach_input_file ${bach_data_file} \
    -mpileup_dir ${bach_output_dir} \
    -high_confidence_bed ${high_conf_bed} \
    -ref_genome ${ref_genome_file} \
    -write_to_db \
    -write_vcf_file \
    -vcf_header_file ${vcf_header} \
    -data_output_path ${bach_output_dir} \
    -log_debug