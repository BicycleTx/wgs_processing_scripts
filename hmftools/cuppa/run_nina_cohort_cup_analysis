#!/usr/bin/env bash

source locate_files || exit 1
source message_functions || exit 1
source database_functions || exit 1

sample_ids_file=$1
cup_ref_dir=$2
output_dir=$3
run_id=$4

echo "Running Cuppa for for cohort ${sample_ids_file}"

# Database details
credentials=$(prod_reader_sql_credentials)

database_name="hmf_patients"
db_user=$(extract_database_user "${credentials}")
db_pass=$(extract_database_password "${credentials}")
db_url=$(construct_database_url "${credentials}" "${database_name}")

siga_jar=/data/tools/sig-analyser_pilot/sig-analyser.jar
cuppa_jar=/data/tools/cuppa_pilot/cuppa.jar

# Produce SNV counts and genomic position counts

java -cp ${siga_jar} com.hartwig.hmftools.sig_analyser.loaders.SigDataLoader \
    -load_snvs \
    -sample ${sample_ids_file} \
    -db_user ${db_user} -db_pass ${db_pass} -db_url ${db_url} \
    -pos_bucket_sizes 500000 \
    -output_dir ${output_dir} \
    -output_file_id ${run_id} \
    -log_debug

pos_freq_counts_file=${output_dir}/snv_position_freq_500000.csv
snv_matrix_file=${output_dir}/sample_counts.${run_id}.csv

if [[ ! -f $pos_freq_counts_file ]] ; then
    error "Error creating $pos_freq_counts_file, aborting"
fi

if [[ ! -f $snv_matrix_file ]] ; then
    error "Error creating $snv_matrix_file, aborting"
fi

java -cp ${siga_jar} com.hartwig.hmftools.sig_analyser.loaders.PositionFreqBuilder \
    -sample_data_file ${sample_ids_file} \
    -position_bucket_size 500000 \
    -position_data_file ${pos_freq_counts_file} \
    -output_dir ${output_dir} \
    -output_file_id ${run_id} \
    -log_debug

pos_freq_matrix_file=${output_dir}/pos_freq_matrix.${run_id}.csv

if [[ ! -f $pos_freq_matrix_file ]] ; then
    error "Error creating $pos_freq_matrix_file, aborting"
fi

rm ${pos_freq_counts_file}

java -jar ${cuppa_jar} \
    -db_user ${db_user} -db_pass ${db_pass} -db_url ${db_url} \
    -ref_data_dir ${cup_ref_dir} \
    -sample_data_file ${sample_ids_file} \
    -sample_snv_counts_file ${snv_matrix_file} \
    -sample_snv_pos_freq_file ${pos_freq_matrix_file} \
    -write_classifiers_only \
    -output_dir ${output_dir} \
    -output_id ${run_id} \
    -log_debug
