#!/usr/bin/env bash

source locate_files || exit 1
source metadata_functions || exit 1
source message_functions || exit 1

run_dir=$1 && shift

if [[ -z "${run_dir}" ]]; then
    error "No run dir provided. Exiting"
fi

sample_id=$(load_tumor_sample_from_metadata ${run_dir})
cuppa_jar=$(locate_pilot_cuppa)
sig_analyser_jar=$(locate_pilot_sig_analyser)

snv_vcf_file=$(locate_purple_somatic_variants ${run_dir})
sv_vcf_file=$(locate_purple_structural_variants ${run_dir})

cup_ref_dir=/data/experiments/nina_cup_experiments
working_dir=${run_dir}/cuppa_pilot
data_dir=${working_dir}/data
output_dir=${working_dir}/output

info "Running CUPPA analysis pipeline on ${run_dir}"
info " - Sample ID: ${sample_id}"
info " - CUPPA pipeline output directory: ${working_dir}"
info " - CUPPA Reference data directory: ${cup_ref_dir}"

if [[ ! -d ${working_dir} ]]; then
    info "Creating ${working_dir}"
    mkdir -p ${working_dir}
else
    info "Wiping ${working_dir}"
    rm -r ${working_dir}/*
fi

info "Preparing ${working_dir} for usage"
mkdir -p ${data_dir}
mkdir -p ${output_dir}

info "Copying required input files to ${data_dir}"
cp -r ${run_dir}/purple/* ${data_dir}/
cp -r ${run_dir}/linx/* ${data_dir}/

info "Generating SNV and signature data for ${sample_id}"

# Run signatures to produce SNV counts, genomic position counts and signature allocations
snv_cosmic_sigs=${cup_ref_dir}/snv_cosmic_sigs.csv

java -cp ${sig_analyser_jar} com.hartwig.hmftools.sig_analyser.fitter.SampleFitter \
    -sample ${sample_id} \
    -signatures_file ${snv_cosmic_sigs} \
    -somatic_vcf_file ${snv_vcf_file} \
    -position_bucket_size 500000 -max_sample_count 20000 \
    -upload_to_db false \
    -output_dir ${data_dir} \
    -log_debug

info "Running CUPPA for ${sample_id}"

java -jar ${cuppa_jar} \
    -sample_data "${sample_id};Unknown" \
    -sample_data_dir ${data_dir} \
    -sample_sv_file ${sv_vcf_file} \
    -sample_somatic_vcf ${snv_vcf_file} \
    -ref_data_dir ${cup_ref_dir} \
    -output_dir ${output_dir} \
    -log_debug


# We write output PDF to the same directory containing the CUPPA output data
info "Writing CUP PDF Report"
report_script=/data/repos/analysis/cup/CupGenerateReport.R
Rscript ${report_script} ${sample_id} ${output_dir}/ ${output_dir}/
