#!/bin/bash
#
# Performs GRIDSS assembly
#
source do_run_gridss_lib

echo $(date) AssembleBreakends
java -Xmx31G $gridss_jvm_args \
	gridss.AssembleBreakends \
	$gridss_common_args \
	INPUT=$normal_bam \
	INPUT=$tumor_bam \
	OUTPUT=$assembly_bam \
	WORKER_THREADS=$threads \
	BLACKLIST=$blacklist \
	CONFIGURATION_FILE=$gridss_config_file \
	2> $log_prefix.assembly.log || exit 1

echo $(date) CollectGridssMetrics
# async metrics
java -Xmx256M $gridss_jvm_args \
		gridss.analysis.CollectGridssMetrics \
		ASSUME_SORTED=true \
		I=$assembly_bam \
		O=$assembly_bam.gridss.working/$(basename $assembly_bam) \
		THRESHOLD_COVERAGE=$gridss_threshold_coverage \
		FILE_EXTENSION=null \
		GRIDSS_PROGRAM=null \
		GRIDSS_PROGRAM=CollectCigarMetrics \
		GRIDSS_PROGRAM=CollectMapqMetrics \
		GRIDSS_PROGRAM=CollectTagMetrics \
		GRIDSS_PROGRAM=CollectIdsvMetrics \
		GRIDSS_PROGRAM=ReportThresholdCoverage \
		PROGRAM=null \
		PROGRAM=CollectInsertSizeMetrics \
		2> $log_prefix.assembly.CollectGridssMetrics.log &

sv_bam=$assembly_bam.gridss.working/$(basename $assembly_bam).sv.bam
echo $(date) SoftClipsToSplitReads
java -Xmx3G $gridss_jvm_args \
	gridss.SoftClipsToSplitReads \
	$gridss_common_args \
	I=$assembly_bam \
	O=/dev/stdout \
	REALIGN_ENTIRE_READ=true \
	ALIGNER_STREAMING=true \
	WORKER_THREADS=$threads \
	VERBOSITY=DEBUG \
	2> $log_prefix.assembly.SoftClipsToSplitReads.log | \
samtools sort -@ $threads -o ${sv_bam} - || exit 1

samtools index ${sv_bam} &

# wait for metrics and indexing to finish
wait

