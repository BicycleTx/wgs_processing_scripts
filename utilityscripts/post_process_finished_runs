#!/usr/bin/env bash

source lims_functions || exit 1
source metadata_functions || exit 1
source message_functions || exit 1

health_check_processed_runs

info "Count HealthChecker succeeded"
health_check_processed_runs | grep -c "HealthChecker has succeeded for"

purple_version=2.54
info "Count analysis purple version v${purple_version}"
health_check_processed_runs | grep -c "This analysis has been done with purple version=${purple_version}"

source_path=/data/gcp/processed_runs

process_runs=$(ls ${source_path})
for run in ${process_runs}; do
    sample_id=$(load_tumor_sample_from_metadata ${source_path}/${run})
    tumor_barcode=$(find_barcode_for_sample_name ${sample_id})
    cohort=$(find_cohort_type ${tumor_barcode})

    info "Checking primary tumor doid"
    report_doid=$(get_doids_for_biopsy ${sample_id})
    protect_doid=$(cat ${source_path}/${run}/protect/run.log | grep -w "initial tumor doids" | awk '{print $NF}' | tail -c +3 | head -c -3)
    if [[ ${protect_doid} == ${report_doid} ]]; then
        info "The doid are equals of protect ${protect_doid} and report ${report_doid}"
    else
        warn "The doid are not equals of protect ${protect_doid} and report ${report_doid}"
    fi

    if [[ -z ${cohort} ]]; then
        warn "Could not resolve cohort for ${run}."
    elif [[ ${cohort} == "CORELR02" || ${cohort} == "CORERI02" ]]; then
        info "Moving set ${run} to /data/core/runs"
        mv ${source_path}/${run} /data/core/runs/
        info "Create patient report for ${run}"
        create_patient_report_for_run /data/core/runs/${run}
    elif [[ ${cohort} == "CPCT" || ${cohort} == "CPCTpancreas" || ${cohort} == "DRUP" || ${cohort} == "DRUPstage3" || ${cohort} == "COREDB" || ${cohort} == "ACTIN"  ]]; then
        info "Moving set ${run} to /data/cpct/runs"
        mv ${source_path}/${run} /data/cpct/runs/
        info "Create patient report for ${run}"
        create_patient_report_for_run /data/cpct/runs/${run}
        info "Copy run to hmf-crunch at GCP"
        copy_run_to_gcp_crunch_project ${run}
    else
        # This is for patients that require a summary (WIDE, some CORE)
        info "Copying set ${run} to /data/cpct/reportable_runs"
        cp -R ${source_path}/${run} /data/cpct/reportable_runs/
        info "Create patient report for ${run}"
        create_patient_report_for_run /data/cpct/reportable_runs/${run}
        if [[ ${cohort} == "CORE" || ${cohort} == "CORELR11" || ${cohort} == "CORESC11" ]]; then
            info "Moving set ${run} to /data/core/runs"
            mv ${source_path}/${run} /data/core/runs/
        elif [[ ${cohort} == "WIDE" ]]; then
            info "Moving set ${run} to /data/cpct/runs"
            mv ${source_path}/${run} /data/cpct/runs/
            info "Copy run to hmf-crunch at GCP"
            copy_run_to_gcp_crunch_project ${run}
        fi
    fi
done
