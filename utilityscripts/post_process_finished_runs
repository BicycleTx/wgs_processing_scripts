#!/usr/bin/env bash

source metadata_functions

health_check_processed_runs

echo "[INFO] Count HealthChecker succeeded"
health_check_processed_runs | grep -c "HealthChecker has succeeded for"

purple_version=2.47
echo "[INFO] Count analysis purple version v${purple_version}"
health_check_processed_runs | grep -c "This analysis has been done with purple version=${purple_version}"

source_path=/data/gcp/processed_runs

process_runs=$(ls ${source_path})
for run in ${process_runs}; do
    patient_id=$(echo ${run} | tr "_" " " | awk '{print $5}')

    # Load run into db when CUPPA report is requested
    sample_id=$(load_tumor_sample_from_metadata ${run})
    CUPPA_sample=$(cat /data/ops/lims/prod/CUPPA_samples.tsv | grep -w ${sample_id} | wc -l)
    if [[ ${CUPPA_sample} -ge 1 ]]; then
        load_run_into_prod_db ${run}
    fi

    if [[ ${patient_id} == "CORELR02"* || ${patient_id} == "CORERI02"* ]]; then
        echo "[INFO] Moving set ${run} to /data/core/runs"
        mv ${source_path}/${run} /data/core/runs/
        echo "[INFO] Create patient report for ${run}"
        create_patient_report_for_run /data/core/runs/${run}
    elif [[ ${patient_id} == "CPCT"* || ${patient_id} == "DRUP"* ]]; then
        echo "[INFO] Moving set ${run} to /data/cpct/runs"
        mv ${source_path}/${run} /data/cpct/runs/
        echo "[INFO] Create patient report for ${run}"
        create_patient_report_for_run /data/cpct/runs/${run}
        echo "[INFO] Copy run to hmf-crunch at GCP"
        copy_run_to_gcp_crunch_project ${run}
        echo "[INFO] Rerun set"
        rerun_processed_set /data/cpct/runs/${run}
    else
        # This is for patients that require a summary (WIDE, some CORE)
        echo "[INFO] Moving set ${run} to /data/cpct/reportable_runs"
        mv ${source_path}/${run} /data/cpct/reportable_runs/
        echo "[INFO] Create patient report for ${run}"
        create_patient_report_for_run /data/cpct/reportable_runs/${run}
    fi
done
