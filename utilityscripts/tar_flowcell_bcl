#!/usr/bin/env bash

source message_functions || exit 1

path_of_dir_to_tar=$1
out_root="${2:-/data2/processed}"

if [[ -z $1 || $1 == "-h" || $1 == "--help" ]]; then
    echo "---"
    echo " Descr: Creates tar of flowcell including BCL (excluding Images/Logs/FASTQ)"
    echo "        Output will be written to ${out_root}"
    echo " Usage: $(basename $0) /path/to/flowcell/directory"
    echo "        $(basename $0) /path/to/flowcell/directory"
    echo "        $(basename $0) /path/to/flowcell/directory /path/to/store/output"
    echo " Exmpl: $(basename $0) /data1/illumina_data/201013_NB500901_0281_AHKYLCBGXG"
    echo "        $(basename $0) /data1/illumina_data/201013_NB500901_0281_AHKYLCBGXG /data/tmp"
    echo "---"
    exit 1
fi

in_root=$(dirname "${path_of_dir_to_tar}")
tar_dir_name=$(basename "${path_of_dir_to_tar}")
out_tar_name=""

# If possible add all projects from SampleSheet to output file name
function join_by { local IFS="$1"; shift; echo "$*"; }
sample_sheet="${path_of_dir_to_tar}/SampleSheet.csv"
if [[ -f "${sample_sheet}" ]]; then
    col_idx=$(grep ^Sample_ID "${sample_sheet}" | tr "," "\n" | grep -n Project | cut -d":" -f1)
    projects=$(join_by "-" "$(sed -e '1,/Sample_ID/d' "${sample_sheet}" | \
        grep -vP "^[\,\s]+$" | cut -d"," -f "${col_idx}" | sort | uniq)")
    out_tar_name="${tar_dir_name}_${projects}_BCL.tar"
else
    warn "SampleSheet.csv not found (${sample_sheet}) so unable to add project ID to tar name"
    out_tar_name="${tar_dir_name}_BCL.tar"
fi

out_tar_path="${out_root}/${out_tar_name}"
out_cnt_path="${out_tar_path}.content"
out_md5_path="${out_tar_path}.md5"

## sanity checks
if [[ ! -d "${out_root}" ]]; then
    error "Output root dir does not exist (${out_root})"
fi

if [[ -e "${out_tar_path}" ]]; then
    error "Provided output tar file already exists (${out_tar_path})"
fi

if [[ ! -e "${path_of_dir_to_tar}" ]]; then
    error "Provided dir to tar does not exist (${path_of_dir_to_tar})"
fi

if [[ $(find ${path_of_dir_to_tar} -type f -name "*.bcl.bgzf" -or -name "*.cbcl" | wc -l) -lt 1 ]]; then
    error "Provided dir to tar does not contain BCL or CBCL files (${path_of_dir_to_tar})"
fi

## construct tar command
tar_cmd="tar"
tar_cmd+=" --exclude *Images*"
tar_cmd+=" --exclude *Logs*"
tar_cmd+=" --exclude *Fastq*"
tar_cmd+=" --exclude *conversion*.txt"
tar_cmd+=" --exclude *.fastq.gz"
tar_cmd+=" -cf ${out_tar_path}"
tar_cmd+=" ${tar_dir_name}"

## create output files
info "Changing dir to in root (${in_root})"
cd ${in_root} || exit 1

info "Creating tar file (${out_tar_path})"
${tar_cmd} || exit 1
du_of_tar=$(du -h "${out_tar_path}" | cut -f1)

info "Creating content file (${out_cnt_path})"
tar -tf "${out_tar_path}" > "${out_cnt_path}"

info "Changing dir to out root (${out_root})"
cd ${out_root} || exit 1

info "Creating md5 file (${out_md5_path})"
md5sum "${out_tar_name}" > "${out_md5_path}"

info "Output files ready:"
info " ${out_tar_path} (${du_of_tar})"
info " ${out_cnt_path}"
info " ${out_md5_path}"
info "Cmd to sync output files to datastore:"
info "  rsync -ahP --stats ${out_tar_path} ${out_cnt_path} ${out_md5_path} ds:/data/tmp/"
info ""
