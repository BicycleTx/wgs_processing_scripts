#!/usr/bin/env bash

source message_functions || exit 1

SCRIPT_NAME="$(basename "$0")"

IMAGE_PROJECT="hmf-pipeline-development"

main() {
  info "Started ${SCRIPT_NAME}"

  corecount="2"  # default argument
  disksize="200GB"  # default argument
  vm_type="n1-standard"  # default argument
  pre_emptible_arg=""  # default argument
  startup_script_arg=""  # default argument
  costcenter_arg=""  # default argument

  UNRECOGNIZED=()
  while [[ $# -gt 0 ]]
  do
    key="$1" && shift

    case $key in
      -n|--name)
        name="$1" && shift;;
      -c|--corecount)  # optional
        corecount="$1" && shift;;
      -d|--disksize)  # optional
        disksize="$1" && shift;;
      -t|--type)  # optional
        vm_type="$1" && shift;;
      -e|--preemptible)  # optional
        pre_emptible_arg="-e";;
      -s|--startupscript)  # optional
        startup_script_arg="-d $1" && shift;;
      -u|--costcenter)  # optional
        costcenter_arg="-c $1" && shift;;
      *)
        UNRECOGNIZED+=("${key}");;
    esac
  done

  # sanity checks
  [[ ${#UNRECOGNIZED[@]} -eq 0 ]] || die "Unrecognized options to ${SCRIPT_NAME}: options=${UNRECOGNIZED[*]}"
  [[ -n ${name} ]] || die "Variable 'name' has not been set"

  latest_image=$(gcloud --project="${IMAGE_PROJECT}" compute images describe-from-family "base-image" | grep name | cut -d" " -f2) \
        || die "Unable to describe-from-family from project ${IMAGE_PROJECT}"

  make_vm -n "${name}" -m "${vm_type}-${corecount}" -i "${latest_image}" -p "${IMAGE_PROJECT}" \
        -s "${disksize}" ${pre_emptible_arg} ${startup_script_arg} ${costcenter_arg}
}

main "$@"
