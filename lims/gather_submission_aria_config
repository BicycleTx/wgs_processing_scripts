#!/usr/bin/env bash

CREATE_ARIA_SCRIPT="create_aria2_config_by_set_name"

if [[ $# -eq 0 ]]; then echo "Usage: $(basename $0) HMFreg0000"; exit 1; fi

submission=$1
submission_dir="/data/submissions/${submission}"
output_dir="${submission_dir}/aria2"
runs_json="${submission_dir}/runs.json"
create_job="${output_dir}/create_aria_configs.sh"
create_log="${output_dir}/create_aria_configs.log"
out_config="${output_dir}/${submission}.aria.txt"

## sanity checks
if [[ ! -d "${submission_dir}" ]] ; then echo "[ERROR] Submission dir does not exist (${submission_dir})"; exit 1; fi
if [[ ! -w "${submission_dir}" ]] ; then echo "[ERROR] Submission dir is not writable (${submission_dir})"; exit 1; fi
if [[ ! -f "${runs_json}" ]] ; then echo "[ERROR] Runs json does not exist (${runs_json})"; exit 1; fi
if [[   -d "${output_dir}" ]] ; then echo "[ERROR] Output dir already exists (${output_dir})"; exit 1; fi

echo "[INFO] Creating aria output dir (${output_dir})"
mkdir "${output_dir}"

echo "[INFO] Changing dir to output dir '${output_dir}'"
cd ${output_dir} || exit
if [[ ! $? -eq 0 ]]; then echo "[ERROR] Unable to change dir to ${output_dir}" && exit 1; fi

non_val_count=$(cat "${runs_json}" | jq '[select(.[].status != "Validated")] | length')
if [[ "${non_val_count}" -gt 0 ]]; then
    echo "[WARN] There are ${non_val_count} runs that will be missing in config because status != Validated"
fi

echo "[INFO] Creating job file (${create_job})"
for run_name in $(cat "${runs_json}" | jq -r '.[] | select(.status == "Validated") | .name'); do
    echo "${CREATE_ARIA_SCRIPT} ${run_name}"
done > "${create_job}"
chmod +x "${create_job}"

echo "[INFO] Executing job script (runtime depends on amount of samples, check progress in log '${create_log}')"
cat ${create_job} | parallel -j5 -I% --max-args 1 % > ${create_log} 2>&1

echo "[INFO] Printing any non INFO lines from log"
cat ${create_log} | grep -v '\[INFO\]'

echo "[INFO] Checking log for errors with check_log_file (will print if any found)"
check_log_file "${create_log}"

echo "[INFO] Joining all run aria.txt files to ${out_config}"
find ${output_dir} -mindepth 1 -maxdepth 1 -type f -name "*_*.aria.txt" -exec cat {} \+ > "${out_config}"

echo "[INFO] Action: Check one URL manually in browser"
cat "${out_config}" | grep https | tail -1

echo "[INFO] Action: If all OK you can upload final config to Nextcloud with:"
echo " upload_files_to_nextcloud_research ${out_config}"
echo ""
