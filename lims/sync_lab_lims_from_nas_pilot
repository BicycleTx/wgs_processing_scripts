#!/usr/bin/env bash

source message_functions || exit 1

out_dir=$1 && shift # prod or pilot lims dir

if [[ -z "${out_dir}" ]]; then
    echo "Usage: $(basename $0) /path/to/out/dir"
    echo "   Eg: $(basename $0) /data/ops/lims/pilot"
    exit 1
fi

## setup main variables
LAB_DIR="${out_dir}/lab_files"
DAY_DIR="${LAB_DIR}/$(date '+%y%m%d')"
SYM_DIR="${LAB_DIR}/latest"
NAS_DIR="/volume1/sync_from_infracom"

FOR_001_FILE="HMF-FOR-001 Received Samples 2021 v5.11.xlsx"
FOR_002_FILE="HMF-FOR-002 Sample in process 2021 v4.3.xlsx"

NAS_FILES=(
  "${NAS_DIR}/${FOR_001_FILE}"
  "${NAS_DIR}/${FOR_002_FILE}"
)

LAMA_BUCKET="lama-export"
LAMA_FILES=(
  "gs://${LAMA_BUCKET}/Cohorts.json"
  "gs://${LAMA_BUCKET}/Hospitals.json"
  "gs://${LAMA_BUCKET}/Isolations.json"
  "gs://${LAMA_BUCKET}/LibraryPreps.json"
  "gs://${LAMA_BUCKET}/Patients.json"
  "gs://${LAMA_BUCKET}/SampleStatus.json"
  "gs://${LAMA_BUCKET}/SnpChecks.json"
)

main() {
    info "Starting with $(basename $0)"

    dir_exists_and_is_writable "${out_dir}"
    dir_exists_and_is_writable "${LAB_DIR}"
    dir_exists_and_is_writable "${SYM_DIR}"

    mkdir -p "${DAY_DIR}"

    for001_source="${DAY_DIR}/${FOR_001_FILE}" # Excel FOR-001
    for002_source="${DAY_DIR}/${FOR_002_FILE}" # Excel FOR-002

    for001_samp_txt="${DAY_DIR}/for001_samples.tsv"
    for001_subm_txt="${DAY_DIR}/for001_submissions.tsv"
    for001_cont_txt="${DAY_DIR}/for001_contacts.tsv"
    for002_proc_txt="${DAY_DIR}/for002_processing.tsv"

    info "Retrieving input files from NAS (${DAY_DIR})"
    for nas_file_path in "${NAS_FILES[@]}"; do
      retrieve_file_from_nas "$nas_file_path" "${DAY_DIR}"
    done

    info "Retrieving LAMA input files from bucket (${LAMA_BUCKET})"
    echo "${LAMA_FILES[@]}" | tr " " "\n" | gsutil -m cp -I "${DAY_DIR}"

    info "Converting input files to text formats"
    excel_sheet_to_tsv "${for001_source}" "${for001_subm_txt}" "1" "5"
    excel_sheet_to_tsv "${for001_source}" "${for001_samp_txt}" "2" "2"
    excel_sheet_to_tsv "${for001_source}" "${for001_cont_txt}" "3" "1"
    excel_sheet_to_tsv "${for002_source}" "${for002_proc_txt}" "1" "5"

    info "Symlinking to latest dir (${SYM_DIR})"
    find "${DAY_DIR}" -name "*.tsv" -or -name "*.csv" -or -name "*.json" | while read -r txt_file; do
      symlink_to_latest "${txt_file}" "$SYM_DIR"
    done

    info "Finished with $(basename $0)"
}

excel_sheet_to_tsv() {
    local input_excel_file=$1 && shift
    local output_tsv=$1 && shift
    local sheet_index=$1 && shift
    local skip_rows=$1 && shift
    local excel_name=""
    excel_name=$(basename "${input_excel_file}")

    info "  Converting '${excel_name}' sheet ${sheet_index} with ${skip_rows} header rows"
    xlsx2csv -d "\t" "${input_excel_file}" -s "${sheet_index}" | tail -n +"${skip_rows}" > "${output_tsv}"
    [[ $? -eq 0 ]] || die "Excel conversion to tsv FAILED (${sheet_index})"
}

symlink_to_latest() {
    local source_path=$1 && shift
    local target_dir=$1 && shift
    local target_path=""
    target_path="${target_dir}/$(basename "${source_path}")"
    ln -sfn "${source_path}" "${target_path}" || die "Symlink FAILED (${source_path})"
}

retrieve_file_from_nas() {
    local source_path=$1 && shift
    local target_dir=$1 && shift
    copy_file_from_nas "${source_path}" "${target_dir}" || die "Copying from NAS FAILED (${source_path})"
}

dir_exists_and_is_writable() {
    dir_to_check=$1 && shift
    [[ -d "${dir_to_check}" ]] || die "Dir does not exist (${dir_to_check})"
    [[ -w "${dir_to_check}" ]] || die "Dir is not writable (${dir_to_check})"
}

main