#!/usr/bin/env bash

submission=$1

if [[ -z "${submission}" ]]; then
    echo "[ERROR] Provide a submission (eg HMFreg0001). Exiting" && exit 1
fi

submission_dir="/data/submissions/${submission}"
sop_regex='QC[0-9]+V[0-9]+-SEQ[0-9]+V[0-9]+'

lms_sub_jsn=$(query_lims.pl -type submissions -filter "submission=${submission}" -exact -json)
lms_smp_jsn=$(query_lims.pl -type samples -filter "submission=${submission}" -json)
api_smp_jsn=$(query_api.pl -type samples -filter "submission=${submission}" -filter "status!=Unregistered" -json)
api_rns_jsn=$(query_api.pl -type runs -filter "name=${submission}" -json)

analysis_type=$(echo "${lms_sub_jsn}" | jq -r ".[].analysis_type" )
smp_lms_tot=$(echo "${lms_smp_jsn}" | jq 'length')
smp_api_tot=$(echo "${api_smp_jsn}" | jq 'length')
rns_api_tot=$(echo "${api_rns_jsn}" | jq 'length')

smp_lms_err=$(echo "${lms_smp_jsn}" | jq -c '[.[] | select(.lab_status=="Failed")] | length')
smp_api_rdy=$(echo "${api_smp_jsn}" | jq -c '[.[] | select(.status=="Ready")] | length')
rns_api_rdy=$(echo "${api_rns_jsn}" | jq -c '[.[] | select(.status=="Validated" or .status=="Failed" or .status=="Finished")] | length')
rns_api_val=$(echo "${api_rns_jsn}" | jq -c '[.[] | select(.status=="Validated")] | length')

echo "[INFO] Output type for ${submission} in lims is \"${analysis_type}\""
echo "[INFO] ${smp_lms_tot} LMS samples total (of which ${smp_lms_err} failed)"
echo "[INFO] ${smp_api_tot} BFX samples total"
echo "[INFO] ${smp_api_rdy} BFX samples ready"
echo "[INFO] ${rns_api_tot} BFX runs total"
echo "[INFO] ${rns_api_rdy} BFX runs finished"
echo "[INFO] ${rns_api_val} BFX runs validated"
echo ""
echo "[INFO] Inspect further:"
echo "  query_lims.pl -type samples -filter submission=${submission}"
echo "  query_api.pl -type samples -filter submission=${submission}"
echo "  query_api.pl -type runs -filter name=${submission}"
echo ""
echo "[INFO] Or gather submission if all is ready and ok:"
echo "  gather_submission ${submission}"
echo ""

## print warnings last
if [[ -d "${submission_dir}" ]]; then echo "[WARN] Submission directory already exists (${submission_dir})"; fi
if [[ ! "${rns_api_val}" -eq "${rns_api_tot}" ]]; then echo "[WARN] Not all runs in API are status Validated!"; fi
echo "${lms_smp_jsn}" | jq -r '.[] | select( .lab_status != "Failed") | .lab_sop_versions' | while read smp_sop_str; do
    ## Note to self: no quoted regex since bash 3.2
    if [[ ! "${smp_sop_str}" =~ ${sop_regex} ]]; then
        echo "[WARN] Found sample with incomplete SOP string (${smp_sop_str} does not match ${sop_regex})!"
    fi
done
