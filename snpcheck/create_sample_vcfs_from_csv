#!/usr/bin/env bash

source message_functions || exit 1
source locate_files || exit 1
source locate_gcp_files || exit 1

CODEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
OUTBASE=$(locate_snpcheck_dir) || die "Could not find local snpcheck dir"
SCRIPT="${CODEDIR}/Convert_OpenArray_CSV_to_VCF.py"
UPLOADDIR=$(locate_snpcheck_vcf_upload_dir) || die "Could not get snpcheck upload dir"
GCPDIR=$(locate_snpcheck_vcfs_at_gcp) || die "Could not get snpcheck vcf location at GCP"
SNPCOUNT="26"

if [[ $1 == "" || $1 == "-h" || $1 == "--help" ]]; then
    echo "-----"
    echo " Descr: Reads the output of genotyping machine and converts to vcf"
    echo " Usage: $(basename $0) <path-to-snpgenotyping-csv-results-file"
    echo "        $(basename $0) ${OUTBASE}input/<design>/file.csv"
    echo " Confg:"
    echo "   CODEDIR = ${CODEDIR}"
    echo "   UPLOADDIR  = ${UPLOADDIR}"
    echo "   GCPDIR  = ${GCPDIR}"
    echo "-----"
    exit 1
fi

csv_file=$1
if [[   -z "${csv_file}" ]]; then error "No csv results file provided.."; fi
if [[ ! -f "${csv_file}" ]]; then error "Input csv file does not exist?"; fi
if [[ ! -f "${SCRIPT}"  ]]; then error "Script file does not exist?"; fi
if [[ ! -w "${UPLOADDIR}"  ]]; then error "Output sync dir not writable ($UPLOADDIR)"; fi

## setup design to use
one_sample=$( cat ${csv_file} | grep ^FR | cut -d"," -f1 | sort | uniq | head -1 )
design_size=$( grep -c ^${one_sample} ${csv_file} )
if [[ ${design_size} -eq 60 ]]; then
    info "Detected temporary 60SNP panel"
    SNPCOUNT="60"
fi
DESIGN="${CODEDIR}/${SNPCOUNT}SNPtaq_design.vcf"
OUTDIR="${OUTBASE}output/${SNPCOUNT}SNPtaq"
if [[ ! -f "${DESIGN}" ]]; then error "Design file does not exist (${DESIGN})?"; fi
if [[ ! -d "${OUTDIR}" ]]; then error "Output dir does not exist (${OUTDIR})?"; fi

## continue with parsing and converting
experiment_name=$(echo "$(basename "${csv_file}")" | sed 's/.txt$//' | sed 's/.csv$//' | sed 's/_Results$//')
plate_name=$(cat ${csv_file} | grep -A1 "^Sample ID" | tail -1 | cut -d, -f2)
combi_name="${experiment_name}_${plate_name}"
vcf_out_dir="${OUTDIR}/${combi_name}"

if [[ -d "${vcf_out_dir}" ]]; then error "Output dir already exists (${vcf_out_dir})"; fi

info "Starting conversion from CSVs to VCFs"
info "Output dir will be: ${vcf_out_dir}"
mkdir ${vcf_out_dir}
${SCRIPT} --out ${vcf_out_dir} --des ${DESIGN} --csv ${csv_file}
vcf_count=$(ls ${vcf_out_dir} | wc -l)
info "Total of ${vcf_count} VCFs created"
info ""
info "[TODO] Performs plate QC"
info "  perform_snpcheck_plate_qc ${vcf_out_dir}"
info ""
info "[TODO] Also copy the results to sync dir"
info "  cp -r ${vcf_out_dir} ${UPLOADDIR}"
info ""
info "[TODO] Also sync the results to GCP bucket"
info "  gsutil -m cp -r ${UPLOADDIR}${combi_name} ${GCPDIR}"
info ""