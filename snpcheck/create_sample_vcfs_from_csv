#!/usr/bin/env bash

CODEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
OUTBASE="/data/common/snpcheck"
SCRIPT="${CODEDIR}/Convert_OpenArray_CSV_to_VCF.py"
GCPDIR="/data/gcp/snpcheckvcfupload"
SNPCOUNT="26"

if [[ $1 == "" || $1 == "-h" || $1 == "--help" ]]; then
    echo "-----"
    echo " Descr: Reads the output of genotyping machine and converts to vcf"
    echo " Usage: $(basename $0) <path-to-snpgenotyping-csv-results-file"
    echo "        $(basename $0) /data/common/snpcheck/input/<design>/file.csv"
    echo " Confg:"
    echo "   CODEDIR = ${CODEDIR}"
    echo "   GCPDIR  = ${GCPDIR}"
    echo "-----"
    exit 1
fi

csvFile=$1
if [[   -z ${csvFile} ]]; then echo "[ERROR] No csv results file provided.."; exit 1; fi
if [[ ! -f ${csvFile} ]]; then echo "[ERROR] Input csv file does not exist?"; exit 1; fi
if [[ ! -f ${SCRIPT}  ]]; then echo "[ERROR] Script file does not exist?"; exit 1; fi
if [[ ! -w ${GCPDIR}  ]]; then echo "[ERROR] Output sync dir not writable ($GCPDIR)"; exit 1; fi

## setup design to use
oneSample=$( cat ${csvFile} | grep ^FR | cut -d"," -f1 | sort | uniq | head -1 )
designSize=$( grep -c ^${oneSample} ${csvFile} )
if [[ ${designSize} -eq 60 ]]; then
  echo "[INFO] Detected temporary 60SNP panel"
  SNPCOUNT="60"
fi
DESIGN="${CODEDIR}/${SNPCOUNT}SNPtaq_design.vcf"
OUTDIR="${OUTBASE}/output/${SNPCOUNT}SNPtaq"
if [[ ! -f ${DESIGN}  ]]; then echo "[ERROR] Design file does not exist (${DESIGN})?"; exit 1; fi
if [[ ! -d ${OUTDIR}  ]]; then echo "[ERROR] Output dir does not exist (${OUTDIR})?"; exit 1; fi

## continue with parsing and converting
experimentName=$( echo $( basename ${csvFile} ) | sed 's/.txt$//' | sed 's/.csv$//' | sed 's/_Results$//' )
plateName=$( cat ${csvFile} | grep -A1 "^Sample ID" | tail -1 | cut -d, -f2 )
combiName="${experimentName}_${plateName}"
vcfOutDir="${OUTDIR}/${combiName}"

if [[ -d ${vcfOutDir} ]]; then echo "[ERROR] Output dir already exists (${vcfOutDir})"; exit 1; fi

echo "[INFO] Starting conversion from CSVs to VCFs"
echo "[INFO] Output dir will be: ${vcfOutDir}"
mkdir ${vcfOutDir}
${SCRIPT} --out ${vcfOutDir} --des ${DESIGN} --csv ${csvFile}
vcfCount=$(ls ${vcfOutDir} | wc -l)
echo "[INFO] Total of ${vcfCount} VCFs created"
echo ""
echo "[TODO] Performs plate QC"
echo "  perform_snpcheck_plate_qc ${vcfOutDir}"
echo ""
echo "[TODO] Also copy the results to sync dir"
echo "  cp -r ${vcfOutDir} ${GCPDIR}"
echo ""

