#!/usr/bin/env bash

source api_functions

script=$( basename $0 )

usage() {
    echo "---"
    echo "Usage: $script -s <set> -p <path>" 1>&2;
    echo "       $script -s 170101_HMFregCPCT_etc" 1>&2;
    echo "---"
    exit 1
}

while getopts ":s:" o; do
    case "${o}" in
        s)
            set=${OPTARG} || usage
            ;;
        *)
            usage
            ;;
    esac
done

if [[ -z "${set}" ]]; then
    usage
fi

run_info=$(load_run_info_for_set ${set})
if [ -z "$run_info" ]; then
    echo "[WARN] No run info found for set ${set}. Exiting"
    exit 1
fi

rerun_info=$(load_rerun_info_for_set ${set})
if [ -z "$rerun_info" ]; then
    echo "[WARN] No rerun found for set ${set}. Exiting."
    exit 1
fi

run_bucket=`echo ${run_info} | cut -d ' ' -f5`
rerun_bucket=`echo ${rerun_info} | cut -d ' ' -f5`

localpath=/data/schuberg/tmp/reruns_test/

# KODU: Add below includes to also grab the actual BAMs
#--include "*/mapping/*R_dedup.realigned.bam*" \
#--include "*/mapping/*T[IVX_]*dedup.realigned.bam*" \

sbp s3 sync s3://${run_bucket}/${set}/ ${localpath}/${set}/ \
	--exclude "*" \
	--include "*annotated.vcf*" \
	--include "*filtered*GoNLv5.vcf*" \
	--include "QCStats*" \
	--profile download

sbp s3 sync s3://${rerun_bucket}/${set}/ ${localpath}/${set}/ \
	--exclude "*" \
	--include "*amber*" \
	--include "*cobalt*" \
	--include "*somaticVariants*strelka*results*all.*" \
	--include "*structuralVariants*manta*somaticSV.vcf*" \
	--include "*metadata*" \
	--profile download