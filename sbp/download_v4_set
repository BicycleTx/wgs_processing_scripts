#!/bin/bash

source api_functions

script=$( basename $0 )
localpath="/data/schuberg/cpct_drup_downloads_v4/"

usage() {
    echo "---"
    echo "Usage: $script -s <set>" 1>&2;
    echo "       $script -s 170101_HMFregCPCT_etc" 1>&2;
    echo "---"
    exit 1
}

while getopts ":s:p:" o; do
    case "${o}" in
        s)
            set=${OPTARG} || usage
            ;;
        *)
            usage
            ;;
    esac
done

if [[ -z "${set}" ]]; then
    usage
fi

run_count=$( query_sbp_api -type runs -filter "name=${set}" -filter "ini=Somatic.ini" -filter "pipeline=v4.0" -exact | grep -cv ^# )

if [[ $run_count -ne 1 ]]; then
    echo "[WARN] No Somatic.ini v4.0 run found for set ${set}. Exiting" && exit 1
fi

run_bucket=$( query_sbp_api -type runs -filter "name=${set}" -filter "ini=Somatic.ini" -filter "pipeline=v4.0" -exact -json | jq -r '.[0].bucket' )

echo "[INFO] Starting sync of ${set} from bucket ${run_bucket}"

sbp s3 sync s3://${run_bucket}/${set}/ ${localpath}/${set}/ \
	--exclude "*" \
	--include "*annotated.vcf*" \
	--include "*filtered*GoNLv5.vcf*" \
	--include "*snpcheck*" \
	--include "*.kinship" \
	--include "QCStats*" \
	--include "*mapping*flagstat*" \
	--include "*HealthCheck.out*" \
	--include "settings.config" \
	--include "*mapping*flagstat*" \
	--include "*recal_data*" \
	--include "*damageEstimate*" \
	--include "*amber*" \
	--include "*cobalt*" \
	--include "*purple*" \
	--include "*somaticVariants*post_processed*" \
	--include "*somaticVariants*strelka*" \
	--include "*structuralVariants*bpi*bpi_stats*" \
	--include "*structuralVariants*bpi*somaticSV*" \
	--include "*structuralVariants*bpi*sliced.bam*" \
	--include "*structuralVariants*manta*somaticSV.vcf*" \
	--include "*metadata*" \
	--include "*logs*" \
	--profile download


echo "[INFO] Finished sync of ${set} from bucket ${run_bucket}"
