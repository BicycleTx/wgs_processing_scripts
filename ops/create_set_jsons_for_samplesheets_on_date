#!/usr/bin/env bash

source message_functions || exit 1

SHEETS_LOC=/data/samplesheets
JSONS_LOC=/data/ops/api/prod/jsons

ssheet_date=$1
curr_date=$(date +'%y%m%d')
create_log="/data/ops/api/prod/logs/${curr_date}_create_jsons_for_${ssheet_date}"
register_log="/data/ops/api/prod/logs/${curr_date}_register_sets_from_${ssheet_date}_flowcells"

## Sanity checks
if [[ ! ${ssheet_date} =~ ^[0-9]{6}$ ]]; then error "Wrong input date: run with \"$(basename $0) YYMMDD\""; fi
if [[ -f "${create_log}" ]]; then error "Log already exists: ${create_log}"; fi
if [[ -f "${register_log}" ]]; then error "Log already exists: ${register_log}"; fi
info "JsonCreation started with input date: ${ssheet_date}"

## Actual work
for ssheet in ${SHEETS_LOC}/${ssheet_date}_*_SampleSheet*; do
    echo "${ssheet}";
    print_register_json.pl -samplesheet "${ssheet}";
done > "${create_log}"

## Reporting further actions to screen
info "JsonCreation done and log written to: ${create_log}"
if [[ $( cat "${create_log}" | grep -Pc "\d{6}T[IVX]+" ) -gt 0 ]]; then
    ## multiple biopsies usually need R from bam2fastq
    warn " ATTENTION: Found T[IVX]+ samples so might need to adjust R barcode"
    cat "${create_log}" | grep -P "\d{6}T[IVX]+" | grep Somatic_T
fi

## Samples/barcodes that already exist in HMF API already have the use_existing flag
## but in case a barcode is re-used at the same register batch then manual adjustment is needed
for dup_bc in $( cat ${JSONS_LOC}/*json | jq -r '.samples[].barcode' | sort | uniq -d ); do
   warn "Found duplicate barcode (${dup_bc}): make sure the use_existing flag is set correctly on second one:";
   find ${JSONS_LOC} -maxdepth 1 -name "*json" | while read -r ready_json; do
       if [[ $(grep -c "${dup_bc}" "${ready_json}") -gt 0 ]]; then
           warn "  ${ready_json}"
       fi
   done
done

info "TODO: Check one json per entity to see if settings are conform agreement with requester and entity exists in API"
info "TODO: If all OK you can register them in API with:"
info " nohup register_all_ready_jsons > ${register_log} &"
info ""
info "TODO: Afterwards you can check the registration success rate with:"
info " echo \"Amount IN: \"\$( ls ${JSONS_LOC}/*json | wc -l); echo \"Amount OK: \"\$( cat ${register_log} | grep created | wc -l) "
info ""