#!/usr/bin/env bash

source gcp_functions || exit 1
source message_functions || exit 1
source locate_files || exit 1
source locate_gcp_files || exit 1

prefix=$1 && shift

local_ssheets_dir=$(locate_samplesheets_dir) || die "Could not find the samplesheets dir"
ssheets_bucket=$(locate_samplesheets_at_gcp) || die "Could not find samplesheets bucket path"

switch_to_hmf_ops_service_account || die "Could not switch to hmf ops"

relevant_ssheets_in_bucket=$(gsutil ls "${ssheets_bucket}/${prefix}*") || die "Could not access samplesheet bucket"

for ssheet_in_bucket in ${relevant_ssheets_in_bucket}; do
  ssheet_name="${ssheet_in_bucket##*/}"
  info "Downloading sample sheet: ${ssheet_name}"
  local_ssheet_path="${local_ssheets_dir}/${ssheet_name}"
  gsutil cp "${ssheet_in_bucket}" "${local_ssheet_path}"
  if [[ -f "${local_ssheet_path}" ]]; then
    info "  Success"
  else
    die "Could not download ssheet from ${ssheet_in_bucket}"
  fi
done

unregistered_jsons_dir=$(locate_sample_registration_unregistered_jsons_dir) || die "Could not find the unregistered-jsons dir"

preexisting_json_count=$(find "${unregistered_jsons_dir}" -maxdepth 1 -name "*.json" | wc -l)
json_creation_log="${unregistered_jsons_dir}/create.log"
if [[ ${preexisting_json_count} -gt 0 ]]; then
  warn "Pre existing JSON's found in unregistered json dir. Investigate them.: dir=${unregistered_jsons_dir}"
  warn "Move or remove them if necessary. If not, continue with the following command:"
  info " nohup create_set_jsons_for_samplesheets_with_prefix \"${prefix}\"  $* > \"${json_creation_log}\" 2>&1 &"
else
  info "Creating registration JSON's in ${unregistered_jsons_dir} . For log see ${json_creation_log} ."
  create_set_jsons_for_samplesheets_with_prefix "${prefix}"  "$@" > "${json_creation_log}" 2>&1
fi

info "See \"${json_creation_log}\" for next steps"
