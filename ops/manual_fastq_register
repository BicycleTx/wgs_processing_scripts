#!/usr/bin/env bash

source message_functions || exit 1

api_url='http://api.prod-1/hmf/v1'

hmfapi () {
    http --ignore-stdin "$@"
}

if [[ -z "$1" || $1 == "-h" || $1 == "--help" ]]; then
    echo "---"
    echo " Usage: $(basename $0) \${barcode} \${fastqDir}"
    echo "        $(basename $0) FR12345678 /path/to/fastq/files/"
    echo "---"
    exit 1
fi

barcode=$1 && shift
fastq_dir=$1 && shift

sample_name=""
sample_id=$(curl -s "${api_url}/samples?barcode=${barcode}" | jq '.[].id')

if [[ -z "${sample_id}" ]]; then
    error "Barcode not found at API (${barcode})"
fi

## make sure the FASTQ files contain only ONE sample
sample_count=$(find ${fastq_dir} -name "*_R1_*.fastq.gz" -exec basename {} \; | cut -d"_" -f1 | sort | uniq | wc -l)
if [[ ${sample_count} -ne 1 ]]; then
    error "FASTQ files in dir should be from one sample (found ${sample_count} samples in dir \"${fastq_dir}\")"
else
    sample_name=$(find ${fastq_dir} -name "*_R1_*.fastq.gz" -exec basename {} \; | cut -d"_" -f1 | sort | uniq)
fi

## find all R1 fastq files -> check R2 presence -> register pair
info "Starting with sample name:${sample_name} barcode:${barcode} id:${sample_id}"
find ${fastq_dir} -name "*_R1_*.fastq.gz" -exec basename {} \; | while read R1; do
    R2=$( echo "${R1}" | sed 's/_R1_/_R2_/' )
    if [[ -z "${R1}" || -z "${R2}" ]]; then
        warn "Somehow R1 found but R2 file does not exist (${R2}) so SKIPPING this pair."
    else
        info "Registering fastq R1/R2 pair (name_r1=${R1})"
        hmfapi --print=b POST "${api_url}/fastq" name_r1="${R1}" name_r2="${R2}" bucket="hmf-fastq-storage" sample_id="${sample_id}"
    fi
done

info "Registering sample"
curl -s --header "Content-type: application/json" \
    -X PATCH \
    -d '{"name": "'${sample_name}'", "status": "Pending_QC"}' "${api_url}/samples/${sample_id}"
