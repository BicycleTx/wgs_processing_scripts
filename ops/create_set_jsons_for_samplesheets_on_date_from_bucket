#!/usr/bin/env bash

source gcp_functions || exit 1
source message_functions || exit 1
source locate_files || exit 1
source locate_gcp_files || exit 1

ssheet_date=$1 && shift
curr_date=$(date +'%y%m%d')

## Sanity checks
if [[ ! ${ssheet_date} =~ ^[0-9]{6}$ ]]; then die "Wrong input date: run with \"$(basename $0) YYMMDD\""; fi

local_ssheets_dir=$(locate_samplesheets_dir) || die "Could not find the samplesheets dir"
ssheets_bucket=$(locate_samplesheets_at_gcp) || die "Could not find samplesheets bucket path"

switch_to_hmf_ops_service_account || die "Could not switch to hmf ops"

relevant_ssheets_in_bucket=$(gsutil ls "${ssheets_bucket}" | grep "${ssheet_date}") || die "Could not access samplesheet bucket"

for ssheet_in_bucket in ${relevant_ssheets_in_bucket}; do
  ssheet_name="${ssheet_in_bucket##*/}"
  info "Downloading sample sheet: ${ssheet_name}"
  local_ssheet_path="${local_ssheets_dir}/${ssheet_name}"
  gsutil cp "${ssheet_in_bucket}" "${local_ssheet_path}"
  if [[ -f "${local_ssheet_path}" ]]; then
    info "  Success"
  else
    die "Could not download ssheet from ${ssheet_in_bucket}"
  fi
done

info "TODO: If all of the expected samplesheets have been downloaded, then continue processing by running the below command:"
info " cd /data/ops/api/prod/jsons && nohup create_set_jsons_for_samplesheets_on_date ${ssheet_date} > ./create.log &"
#info ""
#info "TODO: After registering the sets, run below command to back up the registration jsons and logs to the bucket and:"
#info "move them to the correct local directory of the VM:"
#info " cd /data/ops/api/prod/jsons && archive_registration_jsons ${ssheet_date} ${curr_date}"
