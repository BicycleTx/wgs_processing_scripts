#!/usr/bin/env bash

source message_functions || exit 1
source locate_files || exit 1
source io_functions || exit 1

run_dir=$1 && shift

if [[ -z "${run_dir}" ]]; then
    error "Parameters missing. Exiting.";
fi

# Set the pipeline manually to desired version
pipeline_version_file="${run_dir}/pipeline.version"
if [[ -f "${pipeline_version_file}" ]]; then
    rm "${pipeline_version_file}"
fi
version="5.30"
info "Setting pipeline version to ${version} in ${run_dir}"
echo ${version} >> ${pipeline_version_file}

# Check whether there was an error (potentially present in SAGE 3.0.1)
sage_exception_count=$(cat "${run_dir}/sage_somatic/run.log" | grep -c Exception)
if [[ ${sage_exception_count} -ge 1 ]]; then
    warn "Exceptions found in SAGE run log!"
fi

# Create a backup of original breakend and then bump to virus interpreter v1.2
virusbreakend_dir="${run_dir}/virusbreakend"
if [[ -d "${virusbreakend_dir}" ]]; then
    cp -r "${virusbreakend_dir}" "${run_dir}/virusbreakend_orig"
fi

# Rerun virus interpreter since older runs will have pre v1.2
run_virus_interpreter_prod ${run_dir}
load_virusinterpreter_data_prod ${run_dir}

# Retain original cuppa and clean up in preparation of rerun.
cuppa_dir="${run_dir}/cuppa"
if [[ -d "${cuppa_dir}" ]]; then
    cp -r "${cuppa_dir}" "${run_dir}/cuppa_orig"
    create_or_cleanup_dir "${cuppa_dir}"
fi

# To correct for the missing SIG data in earlier runs and compatibility with virus interpreter v1.2
run_cuppa_dna_prod ${run_dir}

# To generate the CUPPA report as a picture (png)
generate_cup_report ${run_dir}

# Produce LILAC output
run_lilac_for_actin_run ${run_dir}

# Create a backup of original protect output prior to rerun
protect_dir="${run_dir}/protect"
if [[ -d "${protect_dir}" ]]; then
    cp -r "${protect_dir}" "${run_dir}/protect_orig"
fi

run_actin_dna_interpretation_pipeline ${run_dir}

