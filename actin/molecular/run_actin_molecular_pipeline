#!/usr/bin/env bash

source message_functions || exit 1
source locate_files || exit 1

sample=$1 && shift

if [[ -z "${sample}" ]]; then
    error "Parameters missing. Exiting.";
fi

orig_run_dir="/data/datasets/${sample}"

if [[ ! -d "${orig_run_dir}" ]]; then
    error "Run dir '${orig_run_dir}' not present. Probably not downloaded yet?"
fi

# Cannot use "locate_actin_molecular_directory_for_sample" since that only works once the dir exists
run_dir="$(locate_actin_molecular_directory)/${sample}"
if [[ -d "${run_dir}" ]]; then
    info "Cleaning up ${run_dir}"
    rm -r "${run_dir}"
fi

info "Copying ${orig_run_dir} to ${run_dir}"
cp -r "${orig_run_dir}" "${run_dir}"

# Set the pipeline manually to v5.25
pipeline_version_file="${run_dir}/pipeline.version"
if [[ -f "${pipeline_version_file}" ]]; then
    rm "${pipeline_version_file}"
fi
version="5.25"
info "Setting pipeline version to ${version} in ${run_dir}"
echo ${version} >> ${pipeline_version_file}

# Retain original cuppa and clean up in preparation of rerun.
if [[ -d "${run_dir}/cuppa" ]]; then
    cp -r "${run_dir}/cuppa" "${run_dir}/cuppa_orig"
    rm -r "${run_dir}/cuppa/*"
fi

# To correct for the missing SIG data in earlier runs.
run_cuppa_dna_prod ${run_dir}
# To generate the CUPPA report as a picture (png)
generate_cup_report_pipeline ${run_dir}

# Post-process all RNA and integrate with DNA.
run_actin_rna_post_process ${run_dir}

# Create a backup of original breakend before we rerun virus interpreter
if [[ -d "${run_dir}/virusbreakend" ]]; then
    cp -r "${run_dir}/virusbreakend" "${run_dir}/virusbreakend_orig"
fi

# Rerun virus interpreter since older runs will have v1.0
run_virus_interpreter_v1_1 ${run_dir}

# Run standard ORANGE in production
run_orange_prod ${run_dir} -max_evidence_level C

# Disabled-germline is generated to be able to share externally with people who do not wish to see germline.
run_orange_prod_no_germline ${run_dir} -max_evidence_level C