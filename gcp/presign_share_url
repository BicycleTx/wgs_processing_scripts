#!/usr/bin/env bash

set -e

source message_functions || exit 1
source secrets_functions || exit 1

gcp_url=$1
secret_name="gcp-hmf-share-u-hmf-share"

if [[ -z "$1" || "$1" == "-h" || "$1" == "--help" ]]; then
    error "Usage: $(basename "$0") gs://bucket/path/to_file"
fi

main () {
    file_name=$(basename "$gcp_url")
    secret=$(get_secret_from_secret_manager "$secret_name") || die "Unable to retrieve secret (${secret_name})"

    signurl_response=$(gsutil signurl -d 7d <(echo "$secret") "$gcp_url") || die "Something wrong with signurl"
    ls_response=$(gsutil ls -L "$gcp_url") || die "Unable to retrieve gs file listing! Exiting."

    md5sums_info=$(parse_md5sums_from_file_listing "$ls_response") || die "Unable to parse md5sums from gs file listing! Exiting."
    md5sum=$(echo "$md5sums_info" | tr -s " " | awk -F" " -v name="$file_name" '$2 == name' | cut -d" " -f1)
    size=$(echo "$ls_response" | tail -1 | grep -Eo '\(.*\)' | tr -d '()')

    signurl_data_line=$(echo "$signurl_response" | grep -A1 ^URL | tail -1)
    expires=$(echo "$signurl_data_line" | cut -f3)
    signed_url=$(echo "$signurl_data_line" | cut -f4)

    [[ "$signed_url" =~ ^https ]] || die "Pre-signed URL does not start with https (${signed_url})"
    [[ -n "$md5sum" ]] || die "Md5sum missing for file ($gcp_url)"
    [[ -n "$size" ]] || die "Size missing for file ($gcp_url)"

    echo "# This file is formatted for download tool aria2 (see https://aria2.github.io/)"
    echo "# The URL expires at ${expires} (file size: ${size})"
    {
        echo "${signed_url}"
        echo "  out=${file_name}"
        echo "  checksum=md5=${md5sum}"
        echo ""
    }
}

parse_md5sums_from_file_listing () {
    local file_listing_info=$1
    # Hexadecimal to base64 from https://gist.github.com/analogist/f74d28b5f00ae3db0cd7f0870f7bad90
    echo "${file_listing_info}" | awk 'BEGIN { \
    decode = "base64 -d | xxd -p | tr -d \"\\n\"";} \
    function basename(file) {sub(".*/", "", file); sub("\:$", "", file); return file} \
    /Hash \(md5\)/ { print $3 | decode; close(decode); \
    printf "  %s\n",basename(gs_url) } \
    /^gs:\/\// { gs_url = $0 }'
}

main