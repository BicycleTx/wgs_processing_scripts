#!/usr/bin/env bash

set -e

flowcells_dir="/data1/illumina_data"
bucket="bcl-input-prod-1"
gcp_cred="/data/dbs/gcp_credentials/bcl-input-prod"

function exit_handler() {
    if [[ $? -ne 0 ]]; then
        gcloud logging write on_premises "ERROR while uploading flowcells from $(hostname)" --severity=ERROR --project=hmf-pipeline-prod-e45b00f2
    fi
}

function rsync_bcls() {
    gsutil -m -o GSUtil:parallel_process_count=7 -o GSUtil:parallel_thread_count=1 -o GSUtil:parallel_composite_upload_threshold=350M \
        rsync -r -x ".*Fastq.*|.*Logs.*|.*Images.*|.*PeriodicSaveRates.*|.*fastq\.gz|.*BaseCalls/[^L].*|.*\.tmp\..*|RTAComplete.txt" "$1" "$2"
}

trap exit_handler EXIT

while true; do
    find "${flowcells_dir}" -mindepth 1 -maxdepth 1 -type d -not -name "TestRuns" -not -name "MyRun" | while read -r flowcell_path; do
        upload_complete="${flowcell_path}/GCPUploadComplete.txt"
        if [[ ! -f $upload_complete ]]; then
            echo "Starting BCL upload of ${flowcell_path}"
            gs_path="gs://${bucket}/$(basename "$flowcell_path")"
            gcloud auth activate-service-account --key-file "${gcp_cred}"
            rsync_bcls "$flowcell_path" "$gs_path"
    
            rta_complete="${flowcell_path}/RTAComplete.txt"
            if [[ -f "$rta_complete" ]]; then
                date --date="@$(stat -c '%Y' "$rta_complete")" "+%Y-%m-%d %H:%M:%S %z" > "${flowcell_path}/RTAComplete.timestamp"
                echo "Starting final BCL upload of ${flowcell_path}"
                rsync_bcls "$flowcell_path" "$gs_path"
                gsutil cp "$rta_complete" "$gs_path"
                echo "${flowcell_path} final upload succeeded"
                date "+%Y-%m-%d %H:%M:%S %z" > "$upload_complete"
            fi
        else
            echo "${flowcell_path} SKIPPING UPLOAD: final upload already taken place"
        fi
    done
done

