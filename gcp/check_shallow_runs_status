#!/usr/bin/env bash

YYMMDD=$(date +'%y%m%d')
SCRIPT=$(basename $0)
archive_path="/data/data_archive/shallow_seq_pipelines"
qcfail_path="/data/gcp/qc_fail_runs"
process_path="/data/gcp/shallow_runs"

## query and store
echo "## ShallowSeq Check (${YYMMDD})"
query_sbp_api -type runs -filter 'ini=ShallowSeq.ini' -json | jq -r '.[] | "\(.name) \(.status) \(.tumor_sample)"' | while read line; do 
    run_name=$(echo "${line}" | cut -d" " -f1)
    run_status=$(echo "${line}" | cut -d" " -f2)
    tumor_sample=$(echo "${line}" | cut -d" " -f3)
    run_name_wo_date=$(echo "${run_name}" | cut -c 8-)
    archive_count=$(find ${archive_path} -mindepth 1 -maxdepth 1 -type d -name "*_${run_name_wo_date}" | wc -l)
    sample_archive_count=$(find ${archive_path} -mindepth 1 -maxdepth 1 -type d -name "*_${tumor_sample}" | wc -l)

    if [[ "${run_name}" =~ "190314-testR" ]]; then 
        continue
    elif [[ "${run_name}" =~ "cancerPanel" ]]; then 
        continue
    elif [[ "${run_name}" =~ "_HMFregVAL_" ]]; then 
        continue
    elif [[ -d "${archive_path}/${run_name}" ]]; then 
        continue
    elif [[ -d "${qcfail_path}/${run_name}" ]]; then 
        echo "## DOWNLOADED: ${run_name} (status=${run_status}, location=${qcfail_path})"
    elif [[ -d "${process_path}/${run_name}" ]]; then 
        echo "## DOWNLOADED: ${run_name} (status=${run_status}, location=${process_path})"
    else
        if [[ "${run_status}" =~ Failed ]]; then 
            if [[ "$sample_archive_count" -gt 0 ]]; then 
                continue
            else 
                echo "## FAILED: ${run_name} (status=${run_status})"
            fi
        elif [[ "${run_status}" =~ ^(Waiting|Pending|Processing|Uploading|Downloading)$ ]]; then 
            echo "## PROCESSING: ${run_name} (status=${run_status})"
        elif [[ "${run_status}" =~ ^(Success|Validated)$ ]]; then 
            echo " process_shallow_run ${run_name} # (status=${run_status})"
        else 
            echo "## UNKNOWN status for run: ${run_name} (status=${run_status})"
        fi
    fi
done | sort

job_file="${HOME}/jobs/${YYMMDD}_process_shallow_runs"
log_file=$(echo "${job_file}" | sed 's/jobs/logs/')

write_job_cmd="$SCRIPT > ${job_file} && chmod +x ${job_file}"
execute_job_cmd="nohup ${job_file} > ${log_file} &"

echo "## ---"
echo "## Potential followup steps to process ready runs:"
echo "## Create job: $write_job_cmd"
echo "##    Run job: $execute_job_cmd"
if [[ -f "${job_file}" ]]; then 
  echo "## WARNING: job file already exists ($job_file)"
fi

