#!/usr/bin/env bash

source message_functions || exit 1

vm_name=""
image_name=""
image_project="hmf-pipeline-development"
zone="europe-west4-a"
machine_type="n1-standard-2"
disk_type="pd-ssd"
disk_size="200G"
extra_params=("--service-account" "hmf-crunch@hmf-crunch.iam.gserviceaccount.com" "--no-address")
family="pipeline5-5-23"
do_not_use_service_account="FALSE"
vm_project="hmf-crunch"

current_project=$(gcloud config get-value project) || die "Unable to get-value project"

print_usage() {
    script=$(basename "$0")
    echo ""
    echo "Descr: Creates a VM (by default in ${vm_project} using service account)"
    echo "Usage: ${script} -n <NAME> [options]"
    echo "Examp: ${script} -n ${USER}-test-vm"
    echo "       ${script} -n ${USER}-test-vm -i my-image-name -p my-image-project"
    echo "Options:"
    echo "      -i image_name       Image name [default is most recent ${family} image]"
    echo "      -p image_project    Image project [${image_project}]"
    echo "      -m machine_type     VM machine type [${machine_type}]"
    echo "      -s disk_size        VM boot disk size [${disk_size}]"
    echo "      -t disk_type        VM boot disk type [${disk_type}]"
    echo "      -x                  Do not use service account and allow internet access"
    echo "                          (WARNING: only use this when not using patient data!!)"
    echo "See also:"
    echo "      https://cloud.google.com/compute/docs/disks"
    echo "      https://cloud.google.com/compute/docs/machine-types"
    echo "      https://cloud.google.com/sdk/gcloud/reference/compute/instances/create"
    echo "      gcloud --project ${image_project} compute images list | grep pipeline"
    echo ""
    exit 1
}

while getopts ':n:p:i:m:s:t:x' flag; do
    case "${flag}" in
        n) vm_name=${OPTARG} ;;
        i) image_name=${OPTARG} ;;
        p) image_project=${OPTARG} ;;
        m) machine_type=${OPTARG} ;;
        s) disk_size=${OPTARG} ;;
        t) disk_type=${OPTARG} ;;
        x) do_not_use_service_account="TRUE" ;;
        *) print_usage
        exit 1 ;;
    esac
done

if [[ -z "${vm_name}" || "$1" == "-h" || "$1" == "--help" ]]; then
    print_usage
fi

# if VM will be created with crunch service account then make sure that project is set
if [[ "${do_not_use_service_account}" == "TRUE" ]]; then
    info "Current project is ${current_project}"
    extra_params=()
    vm_project="${current_project}"
else
    if [[ ! "${current_project}" == "${vm_project}" ]]; then
        info "Current config wants to create VM in ${vm_project} but current project is ${current_project}"
        info "Switch to ${vm_project} (gcloud config set project ${vm_project}) and try again"
        exit 1
    fi
fi

# if no image name provided then try to get newest pipeline image
if [[ -z "${image_name}" ]]; then
    image_name=$(gcloud --project="${image_project}" compute images describe-from-family "${family}" | grep name | cut -d" " -f2) \
    || die "Unable to describe-from-family from project ${image_project}"
fi

info "Details of VM to be created:"
info "    Name: ${vm_name} (in ${current_project})"
info "   Image: ${image_name} (from ${image_project})"
info "  Config: ${machine_type} ${disk_size}" "${extra_params[*]}"

info "Press [ENTER] to create VM..."
read -r -s

info "Start creating VM instance ${vm_name}"
gcloud compute instances create "${vm_name}" \
--image "${image_name}" \
--image-project "${image_project}" \
--machine-type "${machine_type}" \
--boot-disk-type "${disk_type}" \
--boot-disk-size "${disk_size}" \
--scopes storage-full \
--no-restart-on-failure \
--zone "${zone}" \
"${extra_params[@]}" || die "Something went wrong when creating the image. Check the gcloud response."

info "VM usage:"
info "  Access: gcloud compute ssh ${vm_name}"
info "  Delete: gcloud compute instances delete --zone ${zone} -q ${vm_name}"

info "Finished creating VM instance ${vm_name}"