#!/usr/bin/env bash

ROOT_DIR="/data/data_archive/validation_data"
LOG_DIR="${HOME}/logs"

printRsync="false"
dstServer="DESTSERVER"

function main(){
    for typeName in "COLO829" "GIAB12878" "GIABMIX" "GIABvsSELF"; do
        typePath="${ROOT_DIR}/${typeName}"
        print_title "$typeName FASTQ"
        echo "$typePath"

        for versionPath in $(find ${typePath} -mindepth 1 -maxdepth 1 -type d | sort); do
            versionName=$(basename ${versionPath})
            echo "  $versionPath"

            for dataPath in $(find ${versionPath} -mindepth 1 -maxdepth 1 -type d | sort); do
                dataName=$(basename ${dataPath})
                if [[ ${dataName} == "fastq" ]]; then
                    if [[ ${printRsync} == "true" && ($(ls ${dataPath} | wc -l) -gt 0) ]]; then
                        dstPath="/data2/pipelineinput/${versionName}_${dataName}"
                        logPath="${LOG_DIR}/rsync_to_${dstServer}.log"
                        echo "    nohup rsync -ahPL --dry-run --stats ${dataPath}/ ${dstServer}:${dstPath}/ > ${logPath} &"
                    fi
                fi
            done
        done
    done
  
    print_title "PIPELINE DIRS"
    ls -d1 ${ROOT_DIR}/*pipeline*
    echo ""
}

print_usage(){
    echo ""
    echo "Usage: $(basename $0) [-rsync] [-s <server>]"
    echo "  -r        print rsync commands to screen"
    echo "  -s <str>  servername in rsync command (eg c1 or crunch001)"
    echo ""
    exit 1
}

function print_title() {
    local titleString=$1 && shift
    echo -e "\n# $titleString"
}

while getopts ':s:r' flag; do
    case "${flag}" in
        s) dstServer=$OPTARG ;;
        r) printRsync="true" ;;
        *) print_usage
        exit 1 ;;
    esac
done

main
