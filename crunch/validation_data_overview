#!/usr/bin/env bash

ROOT_DIR="/data/data_archive/validation_data"
LOG_DIR="${HOME}/logs"

print_rsync="false"
dst_server="DESTSERVER"

function main(){
    for type_name in "COLO829" "GIAB12878" "GIABMIX" "GIABvsSELF"; do
        type_path="${ROOT_DIR}/${type_name}"
        print_title "${type_name} FASTQ"
        echo "${type_path}"

        for version_path in $(find ${type_path} -mindepth 1 -maxdepth 1 -type d | sort); do
            version_name=$(basename ${version_path})
            echo "  ${version_path}"

            for data_path in $(find ${version_path} -mindepth 1 -maxdepth 1 -type d | sort); do
                data_name=$(basename ${data_path})
                if [[ ${data_name} == "fastq" ]]; then
                    if [[ ${print_rsync} == "true" && ($(ls ${data_path} | wc -l) -gt 0) ]]; then
                        dst_path="/data2/pipelineinput/${version_name}_${data_name}"
                        log_path="${LOG_DIR}/rsync_to_${dst_server}.log"
                        echo "    nohup rsync -ahPL --dry-run --stats ${data_path}/ ${dst_server}:${dst_path}/ > ${log_path} &"
                    fi
                fi
            done
        done
    done
  
    print_title "PIPELINE DIRS"
    ls -d1 ${ROOT_DIR}/*pipeline*
    echo ""
}

print_usage(){
    echo ""
    echo "Usage: $(basename $0) [-rsync] [-s <server>]"
    echo "  -r        print rsync commands to screen"
    echo "  -s <str>  servername in rsync command (eg c1 or crunch001)"
    echo ""
    exit 1
}

function print_title() {
    local title_string=$1 && shift
    echo -e "\n# ${title_string}"
}

while getopts ':s:r' flag; do
    case "${flag}" in
        s) dst_server=${OPTARG} ;;
        r) print_rsync="true" ;;
        *) print_usage
        exit 1 ;;
    esac
done

main
