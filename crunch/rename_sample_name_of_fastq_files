#!/usr/bin/env bash

maxFindDepth=1

dirPath=$PWD # directory that contains fastq files
oldName='' # string of current sample name
newName='' # string of new sample name
doRenameFiles=''
doSymlinkFiles=''
commandLine=$( basename ${0} )" $@"

if [[ $# -eq 0 || $1 == "-h" || $1 == "--help" ]]; then
    echo "---"
    echo " Description: Renames (or symlinks to) fastq files."
    echo "              Searches for <oldname>_*fastq.gz"
    echo " Usage:"
    echo "   $(basename ${0}) -o <oldname> -n <newname>"
    echo "   $(basename ${0}) -o CPCT12345678R -n DRUP12345678R"
    echo ""
    echo " Options:"
    echo "   -r      Perform actual renaming"
    echo "   -s      Symlink instead of rename"
    echo "   -d <s>  Directory with fastq files [$dirPath]"
    echo "   -f <i>  Max depth for find to search [$maxFindDepth]"
    echo "---"
    exit 1
fi

while getopts ":o:n:d:rsf:" opt; do
  case $opt in
    o)
      oldName=$OPTARG
      ;;
    n)
      newName=$OPTARG
      ;;
    d)
      dirPath=$OPTARG
      ;;
    r)
      doRenameFiles='true'
      ;;
    s)
      doSymlinkFiles='true'
      ;;
    f)
      maxFindDepth=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

## store rest of params as files to rename
filesToRename=()
while IFS=  read -r -d $'\0'; do
    filesToRename+=("$REPLY")
done < <(find "${dirPath}" -maxdepth ${maxFindDepth} -name "$oldName*.fastq.gz" -print0)

## sanity checks
if [[ ${#filesToRename[@]} -lt 1 ]]; then echo "[EXIT] No fastq files found (with find-depth ${maxFindDepth})" && exit 1; fi
if [[ -z ${oldName} ]]; then echo "[EXIT] Param oldName (-o) not set" && exit 1; fi
if [[ -z ${newName} ]]; then echo "[EXIT] Param newName (-n) not set" && exit 1; fi
if [[ -z ${dirPath} ]]; then echo "[EXIT] Param dirPath (-d) not set" && exit 1; fi
if [[ ! -d ${dirPath} ]]; then echo "[EXIT] dirPath (${dirPath}) does not exist?" && exit 1; fi


## print info
echo "[INFO] Setting FastqDirectory: ${dirPath}"
echo "[INFO] Setting OldName: \"${oldName}\""
echo "[INFO] Setting NewName: \"${newName}\""

## renaming action
for oldFile in "${filesToRename[@]}"; do
    fileDir=$( dirname ${oldFile} )
    oldBase=$( basename ${oldFile} )
    newBase=$( echo ${oldBase} | sed "s/${oldName}/${newName}/" )
    newFile="${fileDir}/${newBase}" 

    if [[ ${doSymlinkFiles} ]]; then
        echo "[INFO] Symlinking ${oldBase} to ${newBase} )"
        ln -s ${oldFile} ${newBase}
    elif [[ ${doRenameFiles} ]]; then
        echo "[INFO] Renaming ${oldBase} to ${newBase} in ${fileDir}"
        mv ${oldFile} ${newFile} 
    else
        echo "[INFO] Would rename $oldBase to $newBase in ${fileDir}"
    fi
done

if [[ ! ${doRenameFiles} ]]; then
    logFilePath="${dirPath}/fastqrename.log"
    echo "[INFO] Option -r not set so only printed the potential rename actions"
    echo "[INFO] Cmd to rename: ${commandLine} -r > ${logFilePath}"
    if [[ -f ${logFilePath} ]]; then echo "[WARN] Logfile (${logFilePath}) already exists!"; fi
fi

