#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

ALIAS_FILE=~/tool_aliases

function main() {
    if [[ "$1" == "-f" ]]; then
           local force=true
           shift
    fi
    
    local temp_file="${ALIAS_FILE}.tmp"
    local tool_dir
    for tool_dir in "$@"; do
        if [[ ! -d "${tool_dir}" ]]; then
            echo "ERROR: ${tool_dir} is not a directory"
            continue
        else
            echo "INFO: processing ${tool_dir}"
        fi

        while IFS= read -r -d '' tool_bin; do
            local tool_name
            tool_name=$(basename "${tool_bin}")
            if [[ ${tool_name} == "configure" ]]; then
                echo "INFO: ignoring ${tool_bin}"
            else
                echo "alias ${tool_name}='${tool_bin}'" >> "${temp_file}"
            fi
        done < <(find "${tool_dir}" -maxdepth 3 -type f -executable -printf '%T@\t%p\0' | sort -zk 1nr | awk 'BEGIN { RS = "\0"; ORS = "\0" } { print $2 }')
    done

    if [[ -s "${temp_file}" ]]; then
        local dups
        dups=$(cut -d= -f1 "${temp_file}" | sort | uniq -d)
        if [[ -z "${force:-}" && -n "${dups}" ]]; then
            echo "WARN: duplicate tools found (not replacing ${ALIAS_FILE}):"
            echo
            echo "$dups"
            echo
            echo "INFO: supply -f as first argument to force most recently modified file to be used"
        else
            mv "${temp_file}" "${ALIAS_FILE}"
        fi
        rm -f "${temp_file}"
    else
        echo "WARN: no tools found"
    fi
}

main "$@"
