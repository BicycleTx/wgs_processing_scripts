#!/usr/bin/env bash

WORKING_DIR=`pwd`
PATIENT_DIR="/data/repos/testdata/cancerPanel/"
REFERENCE_GENOME_DIR="/data/refgenomes/Homo_sapiens.GRCh37.GATK.illumina/"
OUTPUT_DIR="${WORKING_DIR}/results"

print_usage(){
    echo "Usage: run_pipeline_docker -v version [-p patientdir] [-r refgenomedir] [-o outputdir] [-c confdir] [-l]"
    echo "  -v version          Version of Pipeline2 docker container (Mandatory)"
    echo "  -p patientdir       Directory containing patient data for docker to mount (Optional default = ${PATIENT_DIR})"
    echo "  -r refgenomedir     Directory containing reference genome data for docker to mount (Optional default = ${REFERENCE_DIR})"
    echo "  -o outputdir     Directory containing reference genome data for docker to mount (Optional default = ${OUTPUT_DIR})"
    echo "  -c confdir          Directory containing confiruration (pipeline.yaml) (Optional default = pipeline.yaml of docker image)"
    echo "  -l                  Run in local mode, which means no host networking as this does not work for Docker for Mac"
    exit 1
}

while getopts ':p:r:v:c:o:l' flag; do
  case "${flag}" in
    p) PATIENT_DIR=$OPTARG ;;
    r) REFERENCE_GENOME_DIR=$OPTARG ;;
    c) CONF_DIR=$OPTARG;;
    o) OUTPUT_DIR=$OPTARG;;
    v) VERSION=$OPTARG ;;
    l) LOCAL_MODE="true" ;;
    *) print_usage
       exit 1 ;;
  esac
done

if [ -z $PATIENT_DIR ] || [ -z $REFERENCE_GENOME_DIR ] || [ -z $VERSION ]
then
    print_usage
fi

volumes="-v ${PATIENT_DIR}:/patients -v ${REFERENCE_GENOME_DIR}:/reference_genome/ -v ${OUTPUT_DIR}:/results -v ${OUTPUT_DIR}/tmp:/tmp -v ${OUTPUT_DIR}/logs:/logs"

if ! [ -z $CONF_DIR ]
then
    volumes="-v ${CONF_DIR}:/conf/ ${volumes}"
fi

if [ -z $LOCAL_MODE ]
then
    network="--network=host"
fi

if [[ $EUID -ne 0 ]]; then
   echo "Docker must be run as root. Please enter password for sudo..."
fi

sudo docker run $network $volumes hartwigmedicalfoundation/pipeline2:${VERSION}
