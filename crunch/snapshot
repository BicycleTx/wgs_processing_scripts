#!/usr/bin/env bash

PREFIX=" "

function main {
    echo ''
    hostName=$(hostname)
    if [[ "${hostName}" =~ crunch ]]; then
        processAsCrunch
    elif [[ "${hostName}" =~ datastore ]]; then
        processAsDatastore
    else
        echo "[ERROR] Unknown hostname (${hostName})"
    fi
    echo ''
}

function processAsDatastore {
    echo '--- STORAGE ---'
    diskUsage "/home"
    diskUsage "/data"
}

function processAsCrunch {
    echo '--- STORAGE ---'
    diskUsage "/home"
    diskUsage "/data1"
    diskUsage "/data2"

    echo -e "\n--- ILLUMINA_DATA ---"
    find_subdirs_in_directory "/data1/illumina_data/"

    echo -e "\n--- PIPELINEINPUT ---"
    find_subdirs_in_directory "/data2/pipelineinput"

    echo -e "\n--- PROCESSED ---";
    process_pipeline_runs

    echo -e "\n--- QSTAT ---"
    process_qstat
}

process_qstat() {
    qstat -u "*" | head -10
    totalJobCount=$(qstat -u "*" | awk '$1 !~ /^job|---/' | wc -l)
    echo "${PREFIX}Total number of jobs in qstat: "$totalJobCount
}

process_pipeline_runs() { 
    find_subdirs_in_directory "/data2/processed" | while read run; do
        echo "${PREFIX}${run}"
        if [[ -e "${run}/metadata" ]]; then
            find_file_in_pipeline_run "*QCStats/WGSMetrics*transposed.txt"
            find_file_in_pipeline_run "*logs/PipelineCheck.log"
        fi
    done
}

find_subdirs_in_directory() { 
    find "$1" -mindepth 1 -maxdepth 1 -type d -printf "${PREFIX}%p\n" | sort
}

find_file_in_pipeline_run() { 
    file=$(find ${run} -wholename "$1" )
    if [[ "$file" != "" ]]; then
        echo "${PREFIX}  cat $file"
    fi
}

function diskUsage {
    local mount=$1
    local df_info=$(df -h "${mount}" | tail -1 | tr -s ' ')
    local size=$(echo "${df_info}" | cut -d" " -f3)
    local available=$(echo "${df_info}" | cut -d" " -f4)
    local percString=$(echo "${df_info}" | cut -d" " -f5)
    echo "${PREFIX}${mount}: ${percString} used with ${available} space left (size=$size)"
}

main
