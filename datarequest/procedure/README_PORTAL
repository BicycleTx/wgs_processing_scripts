#!/usr/bin/env bash

# Not supposed to be used
exit 0

## =================================================================================
## Steps to add shares to download-portal
## =================================================================================

# BECOME USER SBPEXT !!
# setup variables
entityName="DR-068"
requestId="${entityName}"
#requestId="${entityName}-update1"
dateToday=$( date +%y%m%d )
requestDir="/data/data_archive/datarequests/${entityName}/${requestId}"

# remove existing shares if needed
currentShareCount=$( query_sbp_api -type shares -filter "entity=${entityName}" | grep -v "^#" | wc -l )
echo "[INFO] Current number of shares for entity ${entityName}: ${currentShareCount}"

# ==================== #

# in case there are shares remove them
removeOldSharesJob="/home/sbpext/jobs/${dateToday}_remove_${entityName}_shares"
removeOldSharesLog="/home/sbpext/logs/${dateToday}_remove_${entityName}_shares"
query_sbp_api -type shares -filter "entity=${entityName}" | grep -v "^#" | cut -f8 | while read shareId; do echo "/home/sbpext/scripts/remove_share_in_prod $shareId"; done > ${removeOldSharesJob}
chmod 755 ${removeOldSharesJob}
nohup ${removeOldSharesJob} > ${removeOldSharesLog} &

# check if indeed all shares are gone
deletedShareCount=$( grep -c '{"RESULT": "deleted"}' ${removeOldSharesLog} )
echo "[INFO] $deletedShareCount shares deleted of $currentShareCount total"
$HOME/scripts/update_sbp_api_db
query_sbp_api -type shares -filter "entity=${entityName}"

# ==================== #

# register new ones
registerNewSharesName="${dateToday}_create_${requestId}_shares"
registerNewSharesJob="/home/sbpext/jobs/${registerNewSharesName}"
registerNewSharesLog="/home/sbpext/logs/${registerNewSharesName}"
registerScript="/home/sbpext/scripts/create_share_in_prod"
jsonCount=$( find ${requestDir}/logs/json/ -type f -name "*json" | wc -l )
echo "[INFO] For request ${requestId} will setup ${registerNewSharesJob} to register ${jsonCount} jsons with ${registerScript}"

## become sbpext and create shares register code
for json in ${requestDir}/logs/json/*json; do echo "${registerScript} $json"; done > ${registerNewSharesJob}
chmod 755 ${registerNewSharesJob}

## perform registering
nohup ${registerNewSharesJob} > ${registerNewSharesLog} &

## check succesfull log
grep "entity_id" ${registerNewSharesLog} | wc -l
grep "CREATED" ${registerNewSharesLog} | wc -l
grep -Pi "Fail|Err|warn" ${registerNewSharesLog}
## check amount in portal