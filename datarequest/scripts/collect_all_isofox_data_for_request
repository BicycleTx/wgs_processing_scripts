#!/usr/bin/env bash

# NOTE: This script is not used typically in production. Has been added as one-off.

source message_functions || exit 1

metadata_tsv=$1 && shift
isofox_dir=$1 && shift

cat ${metadata_tsv} | grep -v "^#" | cut -f2 | while read sample_name; do
    source_set_path=/data/data_archive/rna_seq/201123_isofox/${sample_name}/isofox
    if [[ -d "${source_set_path}" ]]; then
        dest_set_path=${isofox_dir}/${sample_name}

        gene_data_csv=${source_set_path}/${sample_name}.isf.gene_data.csv
        transcript_data_csv=${source_set_path}/${sample_name}.isf.transcript_data.csv
        fusions_csv=${source_set_path}/${sample_name}.isf.fusions.csv
        alt_splice_junc_csv=${source_set_path}/${sample_name}.isf.alt_splice_junc.csv
        retained_intron_csv=${source_set_path}/${sample_name}.isf.retained_intron.csv

        if [[ -f "${gene_data_csv}" && -f "${transcript_data_csv}" && -f "${fusions_csv}" && -f "${alt_splice_junc_csv}" && -f "${retained_intron_csv}" ]]; then
            mkdir -p ${dest_set_path}

            ## start symlinking
            info "Symlinking isofox files for ${sample_name}"
            ln -s ${gene_data_csv} ${dest_set_path}
            ln -s ${transcript_data_csv} ${dest_set_path}
            ln -s ${fusions_csv} ${dest_set_path}
            #ln -s ${alt_splice_junc_csv} ${dest_set_path}
            #ln -s ${retained_intron_csv} ${dest_set_path}
        else
            warn "Either gene or transcript data missing for ${sample_name}"
        fi
    else
        info "No isofox files found for ${sample_name}. Skipping."
    fi
done