#!/usr/bin/env bash

print_usage(){
    echo "-----"
    echo " Descr: Write email that the paperwork is ready"
    echo " Usage: $(basename $0) -i <dr-id>"
    echo " Exmpl: $(basename $0) -i 'DR-001'"
    echo "-----"
    exit 1
}

while getopts ':i:' flag; do
    case "${flag}" in
        i) dr_id=${OPTARG} ;;
        *) print_usage
        exit 1 ;;
    esac
done

if [[ -z "${dr_id}" ]]; then
    echo "[ERROR] script write_email_paperwork_ready did not run, check usage below:"
    print_usage
fi


api_url=$"https://api.bizzmine.cloud/collection/DataRequests/"
api_token=$( cat /data/common/dbs/api_credentials/bizzmine/api_token )

## quick input checks
[[ ! -z "${dr_id}" && "${dr_id}" =~ ^DR ]] || die "dr-id incorrect (${dr_id})?"

release_id=$"${dr_id}"

## start with script
echo ""
echo "[START] write_email_paperwork_ready: $(date +"%y%m%d (%T)")"
echo ""

echo "--- EMAIL FOR DATA ACCESS REQUEST: $release_id ---"
datarequest_id=$( curl get -s -H "x-token: ${api_token}" -H "x-tenant: hartwigmedicalfoundation" ${api_url}/instances | jq --arg DR_select "$release_id" '.[] | select(.DataRequests_DR_1_0_Datarequest_referencenumber==$DR_select) | .DataRequests_DataRequestsID' )
echo "Bizzmine instance: $datarequest_id"
curl get -s -H "x-token: ${api_token}" -H "x-tenant: hartwigmedicalfoundation" ${api_url}/instance/${datarequest_id} > temp.json
jq -r '.[] | "Which data can be shared following the board decision - " + .DataRequests_DR_0_0_Whichdata_shared_followingboarddecision.text + " requested. " + .DataRequests_DR_0_0_Partofthedata_shared ' <temp.json
jq -r '.[] | "Due date Licence Agreement - " + .DataRequests_DR_0_0_Duedate_licenceagreement'  <temp.json
echo ""
echo ""

echo "--send email to:"
jq -r '.[] | .DataRequests_1_2_Emailaddress_mainapplicant' <temp.json
jq -r '.[] | .DataRequests_1_2_Emailaddress_mainapplicant2' <temp.json
echo ""

echo "--subject:"
echo "Hartwig Medical Foundation: data for request $release_id"
echo ""

####### variable prep #########
main_applicant=$( jq -r '.[] | .DataRequests_DR_1_2_Mainapplicant[].value' <temp.json )
main_applicant2=$( jq -r '.[] | .DataRequests_DR_1_2_Mainapplicant2' <temp.json )
# metadata
patient_data=$( jq -r '.[] | .DataRequests_DR_3_2_patientdata' <temp.json )
if [[ "${patient_data}" == "1" ]]; then
    patient_data=", patient"
else
    patient_data=""
fi
pre_treatment_data=$( jq -r '.[] | .DataRequests_DR_3_2_previoustreatmentdata' <temp.json )
if [[ "${pre_treatment_data}" == "1" ]]; then
    pre_treatment_data=", pre-biopsy-treatment"
else
    pre_treatment_data=""
fi
post_treatment_data=$( jq -r '.[] | .DataRequests_DR_3_2_postbiopsytreatmentdata' <temp.json )
if [[ "${post_treatment_data}" == "1" ]]; then
    post_treatment_data=", post-biopsy-treatment"
else
    post_treatment_data=""
fi
# somatic data
somatic_data=$( jq -r '.[] | .DataRequests_DR_3_3_SomaticanalysesdataDNA' <temp.json )
if [[ "${somatic_data}" == "1" ]]; then
    somatic_data=", somatic data (VCF/TXT formats)"
else
    somatic_data=""
fi
# germline data
germline_data=$( jq -r '.[] | .DataRequests_DR_3_3_germlineanalysesdataDNA' <temp.json )
if [[ "${germline_data}" == "1" ]]; then
    germline_data=", germline data (VCF/TXT formats)"
else
    germline_data=""
fi
# raw DNA data
rawDNA_data=$( jq -r '.[] | .DataRequests_DR_3_3_rawdataDNA' <temp.json )
if [[ "${rawDNA_data}" == "1" ]]; then
    rawDNA_data=", aligned readout data (tumor and normal; CRAM format)"
else
    rawDNA_data=""
fi
# raw RNA data
rawRNA_data=$( jq -r '.[] | .DataRequests_DR_3_3_rawdataRNA' <temp.json )
if [[ "${rawRNA_data}" == "1" ]]; then
    rawRNA_data=", RNA-seq data (tumor; FASTQ format)"
else
    rawRNA_data=""
fi
# selection
specified_selection=$( jq -r '.[] | .DataRequests_DR_3_1_Requested_patientselection_specified' <temp.json)
doid_selection=$( jq -r '.[] | .DataRequests_DR_3_1_Doids_requested_patientselection' <temp.json)
if [[ "${specified_selection}" != "" ]]; then
    if [[ "${doid_selection}" != "" ]]; then
        selection=$( jq -r '.[] | .DataRequests_DR_3_1_Doids_requested_patientselection (DOID codes) + " & " + .DataRequests_DR_3_1_Requested_patientselection_specified' <temp.json)
    else
        selection=$( jq -r '.[] | .DataRequests_DR_3_1_Requested_patientselection_specified' <temp.json)
    fi
else
    if [[ "${doid_selection}" != "" ]]; then
        selection=$( jq -r '.[] | .DataRequests_DR_3_1_Doids_requested_patientselection (DOID codes)' <temp.json)
    else
        selection=$( jq -r '.[] | .DataRequests_DR_3_1_Requested_patientselection.text' <temp.json)
    fi
fi

##### email #######
echo "--email body:"
if [[ "${main_applicant2}" != "" ]]; then
    echo "Dear $main_applicant and $main_applicant2,"
else
    echo "Dear $main_applicant,"
fi
echo ""
echo "The paperwork for the Hartwig Medical Foundation request $release_id has been finished, meaning we can move on to the data transfer phase."
echo ""
echo "Before starting this up please double check the details of your request:
The licensed data involves: metadata (tumor${patient_data}${pre_treatment_data}${post_treatment_data} properties; TSV format)${somatic_data}${germline_data}${rawDNA_data}${rawRNA_data}."
echo "It includes the patient selection: ${selection}"
echo ""
echo "Hartwig Medical Foundation will make the licensed data available through the Google Cloud Platform (GCP). \
In order to get access to the licensed data the download contact persons as indicated on the Data Access Request form will need to have or to create a GCP account enabling multi-factor authentication. \
In the data request form you indicated the next persons to be the download contacts(s):"
jq -r '.[].Researchers[]? | select(.Researchers_13Researcheralsodownloadcontact=="1") | .Researchers_13Nameresearcherinvolvedintheproject + " (" + .Researchers_13Emailresearcherinvolvedintheproject + ")"' <temp.json
jq -r '.[].Extraresearchers[]? | select(.Extra_researchers_Extraresearcheralsodownloadcontact=="1") | .Extra_researchers_Nameextraresearcherinvolvedintheproject + " (" + .Extra_researchers_Emailextraresearcherinvolvedintheproject + ")"' <temp.json
echo "Please let us know which one of the aforementioned email addresses are set up as a GCP account with multi-factor authentication enabled."
echo "Note: also a service account can be used; read more about this below under ‘Extra information on accessing the data with your GCP account’."
echo ""
echo "[COPY PART ABOUT GCP IN HERE. See google drive: https://docs.google.com/document/d/1-nQhF3syF-kl5j2Ha2PZoVUzZLFPT_YYG_YG4f5IzGY/edit?usp=sharing]

Please let us know if you have any questions.

Best wishes,"
echo ""
echo ""

rm temp.json
