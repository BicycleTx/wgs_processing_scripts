#!/usr/bin/env bash

print_usage(){
    echo "-----"
    echo " Descr: Checks the logs of the datarequest job"
    echo " Usage: $(basename $0) -m <metadata_tsv> -p <request_logs_path> "
    echo " Exmpl: $(basename $0) -m '/data/data_archive/datarequests/DR-XXX/DR-XXX/metadata/metadata.tsv' -p '/data/data_archive/datarequests/DR-XXX/DR-XXX/logs/'"
    echo "-----"
    exit 1
}

while getopts ':m:p:' flag; do
    case "${flag}" in
        m) metadata_tsv=${OPTARG} ;;
        p) request_logs_path=${OPTARG} ;;
        *) print_usage
        exit 1 ;;
    esac
done

if [[  -z "${metadata_tsv}" || -z "${request_logs_path}" ]]; then
    echo "[ERROR] script check_logs_datarequest_job did not run, check usage below:"
    print_usage
fi


echo ""
echo "[START] check_logs_datarequest_job: $(date +"%y%m%d (%T)")"
echo ""

number_samples_metadata=$( csvcut -t -e iso-8859-1 -c 'sampleId' ${metadata_tsv}  | csvformat -T | tail -n +2 | sort | uniq | wc -l)

log_job_name=$( ls ${request_logs_path} | grep 'create' | grep 'log')
log_job=$"${request_logs_path}${log_job_name}"

echo "[INFO] PREPARED METADATA CHECK"
if [[ $(cat ${log_job}  | grep "=1" | grep -v "somatics" | grep -v "germline" | wc -l ) >0 ]]; then
    requested_metadata=$( cat ${log_job}  | grep "=1" | grep -v "somatics" | grep -v "germline" | wc -l )
    entries_metadata=$( expr $( cat ${log_job} | grep ".metadata.tar" | grep "entries"| sed -nr 's/.*( |^)([0-9]+) entries.*/\2/p' ) - 1 )
    log_metadata_name=$( ls ${request_logs_path} | grep 'metadata.log' )
    log_metadata=$"${request_logs_path}${log_metadata_name}"
    lines_metadata_tar_log=$(expr  $( cat ${log_metadata} | wc -l) - 1)
    echo "[INFO] ${requested_metadata} types of metadata requested"
    #check numbers.
    if [[ ${requested_metadata} != ${entries_metadata} || ${requested_metadata} != ${lines_metadata_tar_log} ]]; then
        echo "[ERROR] The number of types of requested metadata (${requested_metadata}) does not match the number of entries created during the datarequest job (${entries_metadata} (entries) / ${lines_metadata_tar_log} (log check)). Check the log file(s) under: ${request_logs_path}."
    else
        echo "[INFO] The number of types of requested metadata (${requested_metadata}) matches the number of entries created during the datarequest job."
    fi
else
    echo "[INFO] No metadata prepared in datarequest job"
fi
echo ""

echo "[INFO] PREPARED SOMATIC DATA CHECK"
if [[ $(cat ${log_job}  | grep "=1" | grep "somatics") != "" ]]; then
    if [[ $(cat ${log_job}  | grep "=1" | grep "germline") != "" ]]; then
        temp=$( expr $( cat ${log_job} | grep ".somatics.tar" | grep "entries"| sed -nr 's/.*( |^)([0-9]+) entries.*/\2/p' ) - 1 )
        entries_somatic=$( expr ${temp} / 14 )
        log_somatic_name=$( ls ${request_logs_path} | grep 'somatics.log' )
        log_somatic=$"${request_logs_path}${log_somatic_name}"
        temp=$(expr  $( cat ${log_somatic} | wc -l) - 1)
        lines_somatic_tar_log=$(expr  ${temp} / 14)
    else
        temp=$( expr $( cat ${log_job} | grep ".somatics.tar" | grep "entries"| sed -nr 's/.*( |^)([0-9]+) entries.*/\2/p' ) - 1 )
        entries_somatic=$( expr ${temp} / 13 )
        log_somatic_name=$( ls ${request_logs_path} | grep 'somatics.log' )
        log_somatic=$"${request_logs_path}${log_somatic_name}"
        temp=$(expr  $( cat ${log_somatic} | wc -l) - 1)
        lines_somatic_tar_log=$(expr  ${temp} / 13)
    fi
    echo "[INFO] ${number_samples_metadata} number of samples requested"
    #check numbers.
    if [[ ${number_samples_metadata} != ${entries_somatic} || ${number_samples_metadata} != ${lines_somatic_tar_log} ]]; then
        echo "[ERROR] The number of samples requested (${number_samples_metadata}) does not match the number of somatic entries created during the datarequest job (${entries_somatic} (entries) / ${lines_somatic_tar_log} (log check)). Check the log file(s) under: ${request_logs_path}."
    else
        echo "[INFO] The number of samples requested (${number_samples_metadata}) matches the number of somatic entries created during the datarequest job."
    fi
else
    echo "[INFO] No somatic data prepared in datarequest job"
fi
echo ""

echo "[INFO] PREPARED GERMLINE DATA CHECK"
if [[ $(cat ${log_job}  | grep "=1" | grep "germline") != "" ]]; then
    temp=$( expr $( cat ${log_job} | grep ".germline.tar" | grep "entries"| sed -nr 's/.*( |^)([0-9]+) entries.*/\2/p' ) - 1 )
    entries_germline=$( expr ${temp} / 3 )
    log_germline_name=$( ls ${request_logs_path} | grep 'germline.log' )
    log_germline=$"${request_logs_path}${log_germline_name}"
    temp=$(expr  $( cat ${log_germline} | wc -l) - 1)
    lines_germline_tar_log=$(expr  ${temp} / 3)
    echo "[INFO] ${number_samples_metadata} number of samples requested"
    #check numbers.
    if [[ ${number_samples_metadata} != ${entries_germline} || ${number_samples_metadata} != ${lines_germline_tar_log} ]]; then
        echo "[ERROR] The number of samples requested (${number_samples_metadata}) does not match the number of germline entries created during the datarequest job (${entries_germline} (entries) / ${lines_germline_tar_log} (log check)). Check the log file(s) under: ${request_logs_path}."
    else
        echo "[INFO] The number of samples requested (${number_samples_metadata}) matches the number of germline entries created during the datarequest job."
    fi
else
    echo "[INFO] No germline data prepared in datarequest job"
fi
echo ""
echo ""