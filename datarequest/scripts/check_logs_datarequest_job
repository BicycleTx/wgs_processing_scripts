#!/usr/bin/env bash

print_usage(){
    echo "-----"
    echo " Descr: Checks the logs of the datarequest job"
    echo " Usage: $(basename $0) -m <metadata_tsv> -p <request_logs_path> "
    echo " Exmpl: $(basename $0) -m '/data/data_archive/datarequests/DR-XXX/DR-XXX/metadata/metadata.tsv' -p '/data/data_archive/datarequests/DR-XXX/DR-XXX/logs/'"
    echo "-----"
    exit 1
}

while getopts ':m:p:' flag; do
    case "${flag}" in
        m) metadata_tsv=${OPTARG} ;;
        p) request_logs_path=${OPTARG} ;;
        *) print_usage
        exit 1 ;;
    esac
done

if [[  -z "${metadata_tsv}" || -z "${request_logs_path}" ]]; then
    echo "[ERROR] script check_logs_datarequest_job did not run, check usage below:"
    print_usage
fi


echo ""
echo "[START] check_logs_datarequest_job: $(date +"%y%m%d (%T)")"
echo ""

number_samples_metadata=$( csvcut -t -e iso-8859-1 -c 'sampleId' ${metadata_tsv}  | csvformat -T | tail -n +2 | sort | uniq | wc -l)

log_job_name=$( ls ${request_logs_path} | grep 'create' | grep 'log')
log_job=$"${request_logs_path}${log_job_name}"

request_tar_files_path=$( echo ${request_logs_path} | cut -f1,2,3,4,5 -d'/')
request_name=$( echo ${request_logs_path} | cut -f6 -d'/')


if [[ $( cat ${log_job} | grep "request_name_selection=" | wc -l ) >0 ]]; then
    echo "[INFO] DATA REQUEST PREPARED FROM OLD SELECTION - EXTRA CHECK DONE:"
    echo "Request used for selection:"
    cat ${log_job} | grep "request_name_selection=" | cut -d "=" -f2
    dr_name=$( cat ${log_job} | grep "dr_name=" | cut -d "=" -f2 )
    request_name=$( cat ${log_job} | grep "request_name=" | cut -d "-" -f3 )
    dr_name_selection=$( cat ${log_job} | grep "dr_name_selection=" | cut -d "=" -f2 )
    request_name_selection=$( cat ${log_job} | grep "request_name_selection=" | cut -d "-" -f3 )
    compare_metadata_datarequests -i ${dr_name} -s ${request_name} -j ${dr_name_selection} -t ${request_name_selection}
    echo ""
fi

echo "[INFO] PREPARED METADATA CHECK"
if [[ $(cat ${log_job}  | grep "=1" | grep -v "somatics" | grep -v "germline" | grep -v "version=" | wc -l ) >0 ]]; then
    requested_metadata=$( cat ${log_job}  | grep "=1" | grep -v "somatics" | grep -v "germline" | grep -v "version=" |wc -l )
    log_metadata_name=$( ls ${request_logs_path} | grep 'metadata.log' )
    log_metadata=$"${request_logs_path}${log_metadata_name}"
    entries_metadata=$( expr $( cat ${log_job} | grep ".metadata.tar" | grep "entries"| sed -nr 's/.*( |^)([0-9]+) entries.*/\2/p' ) - 1 )
    lines_metadata_tar_log=$( expr $( cat ${log_metadata} | wc -l) - 1 )
    if [[ $( cat ${log_job}  | grep "include_patient_clinical_data=1" | wc -l ) >0 ]]; then
        entries_metadata=$( expr $( echo ${entries_metadata} ) + 1 )
        lines_metadata_tar_log=$( expr $( echo ${lines_metadata_tar_log}) + 1 )
    fi
    if [[ $( cat ${log_job}  | grep "include_treatment_response_clinical_data=1" | wc -l ) >0 ]]; then
        entries_metadata=$( expr $( echo ${entries_metadata} ) - 1 )
        lines_metadata_tar_log=$( expr $( echo ${lines_metadata_tar_log}) - 1 )
    fi
    echo "[INFO] ${requested_metadata}  types of metadata requested:"
    cat ${log_job}  | grep "=1" | grep -v "somatics" | grep -v "germline" | grep -v "version="
    #check numbers.
    if [[ ${requested_metadata} != ${entries_metadata} || ${requested_metadata} != ${lines_metadata_tar_log} ]]; then
        echo "[ERROR] The number of extra types of requested metadata (${requested_metadata}) does not match the number of extra entries created during the datarequest job. Check the log  file(s) (log of the create job and/or tar_DR-XXX_somatics.log) under: ${request_logs_path}."
    else
        echo "[INFO] The number of extra types of requested metadata (${requested_metadata}) matches the number of entries created during the datarequest job."
    fi
    du -sh "${request_tar_files_path}/${request_name}.metadata.tar"
else
    echo "[INFO] No metadata prepared in datarequest job"
fi
echo ""

echo "[INFO] PREPARED SOMATIC DATA CHECK"
if [[ $(cat ${log_job}  | grep "=1" | grep "somatics") != "" ]]; then
    cat ${log_job} | grep ". Found" | grep "samples" | grep "somatics"
    if [[ $(cat ${log_job}  | grep "=1" | grep "germline") != "" ]]; then
        entries_somatic=$( expr $( cat ${log_job} | grep ".somatics.tar" | grep "entries"| sed -nr 's/.*( |^)([0-9]+) entries.*/\2/p' ) - 1 )
        calc_somatic=$( expr ${entries_somatic} / 31 )
        log_somatic_name=$( ls ${request_logs_path} | grep 'somatics.log' )
        log_somatic=$"${request_logs_path}${log_somatic_name}"
        lines_somatic_tar_log=$(expr  $( cat ${log_somatic} | wc -l) - 1)
        calc_somatic_tar_log=$(expr  ${lines_somatic_tar_log} / 31)
        echo "[INFO] ${number_samples_metadata} number of samples requested"
        echo "[INFO] 31 entries per sample."
    else
        entries_somatic=$( expr $( cat ${log_job} | grep ".somatics.tar" | grep "entries"| sed -nr 's/.*( |^)([0-9]+) entries.*/\2/p' ) - 1 )
        calc_somatic=$( expr ${entries_somatic} / 30 )
        log_somatic_name=$( ls ${request_logs_path} | grep 'somatics.log' )
        log_somatic=$"${request_logs_path}${log_somatic_name}"
        lines_somatic_tar_log=$(expr  $( cat ${log_somatic} | wc -l) - 1)
        calc_somatic_tar_log=$(expr  ${lines_somatic_tar_log} / 30 )
        echo "[INFO] ${number_samples_metadata} number of samples requested"
        echo "[INFO] 30 entries per sample."
    fi
    #check numbers.
    if [[ ${number_samples_metadata} != ${calc_somatic} || ${number_samples_metadata} != ${calc_somatic_tar_log} ]]; then
        echo "[ERROR] The number of samples requested (${number_samples_metadata}) does not match the number of somatic entries created during the datarequest job (${calc_somatic} (${entries_somatic} entries log) / ${calc_somatic_tar_log} (${lines_somatic_tar_log} entries tar log)). Check the log file(s) under: ${request_logs_path}."
    else
        echo "[INFO] The number of samples requested (${number_samples_metadata}) matches the number of somatic entries created during the datarequest job."
    fi
    du -sh "${request_tar_files_path}/${request_name}.somatics.tar"
else
    echo "[INFO] No somatic data prepared in datarequest job"
fi
echo ""

echo "[INFO] PREPARED GERMLINE DATA CHECK"
if [[ $(cat ${log_job}  | grep "=1" | grep "germline") != "" ]]; then
    cat ${log_job} | grep ". Found" | grep "samples" | grep "germline"
    entries_germline=$( expr $( cat ${log_job} | grep ".germline.tar" | grep "entries"| sed -nr 's/.*( |^)([0-9]+) entries.*/\2/p' ) - 1 )
    calc_germline=$( expr ${entries_germline} / 3 )
    log_germline_name=$( ls ${request_logs_path} | grep 'germline.log' )
    log_germline=$"${request_logs_path}${log_germline_name}"
    lines_germline_tar_log=$(expr  $( cat ${log_germline} | wc -l) - 1)
    calc_germline_tar_log=$(expr  ${lines_germline_tar_log} / 3)
    echo "[INFO] ${number_samples_metadata} number of samples requested"
    echo "[INFO] 3 entries per sample."
    #check numbers.
    if [[ ${number_samples_metadata} != ${calc_germline} || ${number_samples_metadata} != ${calc_germline_tar_log} ]]; then
        echo "[ERROR] The number of samples requested (${number_samples_metadata}) does not match the number of germline entries created during the datarequest job (${calc_germline} (${entries_germline} entries log) / ${calc_germline_tar_log} (${lines_germline_tar_log} entries tar log)). Check the log file(s) under: ${request_logs_path}."
    else
        echo "[INFO] The number of samples requested (${number_samples_metadata}) matches the number of germline entries created during the datarequest job."
    fi
    du -sh "${request_tar_files_path}/${request_name}.germline.tar"
else
    echo "[INFO] No germline data prepared in datarequest job"
fi
echo ""


if [[ $( cat ${log_job} | grep "tar: " ) != "" || $( cat ${log_job} | grep "WARN" ) != "" || $( cat ${log_job} | grep "ERROR" ) != "" ]]; then
    echo "[ERROR] WARNINGS/ERRORS IN LOG FILES:"
    cat ${log_job} | grep "tar: "
    cat ${log_job} | grep "WARN"
    cat ${log_job} | grep "ERROR"
else
    echo "[INFO] NO WARNINGS/ERRORS IN LOG FILES."
fi
echo ""
echo ""