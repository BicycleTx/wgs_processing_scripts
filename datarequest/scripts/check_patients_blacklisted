#!/usr/bin/env bash

print_usage(){
    echo "-----"
    echo " Descr: Check whether patients are blacklisted"
    echo " Usage: $(basename $0) -m <query_sql or metadata_tsv>"
    echo " Exmpl: $(basename $0) -m 'DRXX.sql or /data/data_archive/datarequests/DR-XXX/DR-XXX/metadata/metadata.tsv'"
    echo "-----"
    exit 1
}

while getopts ':m:' flag; do
    case "${flag}" in
        m) metadata_tsv=${OPTARG} ;;
        *) print_usage
        exit 1 ;;
    esac
done

if [[ -z "${metadata_tsv}" ]]; then
    echo "[ERROR] script check_patients_blacklisted did not run, check usage below:"
    print_usage
fi

echo ""
echo "[START] check_patients_blacklisted: $(date +"%y%m%d (%T)")"

if [[ "$metadata_tsv" =~ sql$ ]]; then
    execute_sql_on_old_prod /data/common/repos/scripts/datarequest/selection/${metadata_tsv} | sort | uniq > temp_datarequest.tsv
    awk -F"\t" 'FNR > 1 {print}' temp_datarequest.tsv | sort | uniq > testfile.tmp && mv testfile.tmp temp_datarequest.tsv
else
    csvcut -t -e iso-8859-1 -c '#patientId' ${metadata_tsv}  | csvformat -T | tail -n +2 | sort | uniq > temp_datarequest.tsv
fi

echo ""
echo "[INFO] number of patients blacklisted:"
cat /data/ops/lims/prod/patient_blacklist.tsv | wc -l
echo "[INFO] number of patients selected for DR:"
cat temp_datarequest.tsv | wc -l
echo "[INFO] Overlap between blacklisted patients and patients selected for DR:"
comm -1 -2 <(sort /data/ops/lims/prod/patient_blacklist.tsv) <(sort temp_datarequest.tsv) | wc -l
echo ""

overlap=$( comm -1 -2 <(sort /data/ops/lims/prod/patient_blacklist.tsv) <(sort temp_datarequest.tsv) | wc -l )
if [[ ${overlap} == 0 ]]; then
    echo "[INFO] No patients in the DR selection are blacklisted."
else
    echo "[ERROR] There are patients that are blacklisted included in the DR selection. Please remove those (see below for the IDs)."
    comm -1 -2 <(sort /data/ops/lims/prod/patient_blacklist.tsv) <(sort temp_datarequest.tsv)
fi
echo ""

rm temp_datarequest.tsv