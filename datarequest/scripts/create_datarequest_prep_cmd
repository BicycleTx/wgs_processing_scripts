#!/usr/bin/env bash

print_usage(){
    echo "-----"
    echo " Descr: Constructs bash command for data prep"
    echo " Usage: $(basename $0) -i <dr_name> -s <dr_suffix> -j <dr_name_selection> -t <dr_suffix_selection> "
    echo " Exmpl: $(basename $0) -i 'DR-001' -s 'update2' -j 'DR-001' -t 'update1' (-s / -j / -t optional!)"
    echo "-----"
    exit 1
}
while getopts ':i:s:j:t:' flag; do
    case "${flag}" in
        i) dr_name=${OPTARG} ;;
        s) dr_suffix=${OPTARG} ;;
        j) dr_name_selection=${OPTARG} ;;
        t) dr_suffix_selection=${OPTARG} ;;
        *) print_usage
        exit 1 ;;
    esac
done

if [[ -z "${dr_name}" ]]; then
    echo "[ERROR] script create_datarequest_prep_cmd did not run, check usage below:"
    print_usage
fi


api_url=$"https://api.bizzmine.cloud/collection/DataRequests/"
api_token=$( cat /data/common/dbs/api_credentials/bizzmine/api_token )


main() {
    info "Starting with $(basename $0)"

    ## we need the index of DR
    local dr_index=$( echo "${dr_name}" | sed 's/^DR\-//')
    local request_name="${dr_name}"
    local output_cmd_file="jobs/$(date +"%y%m%d")_create_DR${dr_index}"
    local proposed_log_file="logs/$(date +"%y%m%d")_create_DR${dr_index}.log"

    ## reset release/request ids to include suffix if given
    if [[ "${dr_suffix}" != "" ]]; then
        request_name="${dr_name}-${dr_suffix}"
        local output_cmd_file="jobs/$(date +"%y%m%d")_create_DR${dr_index}_${dr_suffix}"
        local proposed_log_file="logs/$(date +"%y%m%d")_create_DR${dr_index}_${dr_suffix}.log"
    fi

    ## setup general variables
    local uploads_array=()


    ## setup BizzMine variables
    local datarequest_id=$( curl get -s -H "x-token: ${api_token}" -H "x-tenant: hartwigmedicalfoundation" ${api_url}/instances | jq --arg DR_select "$dr_name" '.[] | select(.DataRequests_DR_1_0_Datarequest_referencenumber==$DR_select) | .DataRequests_DataRequestsID | .[]' )
    curl get -s -H "x-token: ${api_token}" -H "x-tenant: hartwigmedicalfoundation" ${api_url}/instance/${datarequest_id} > temp.json
    local somatics_ind=$( jq -r '.[] | .DataRequests_DR_3_3_SomaticanalysesdataDNA' <temp.json )
    if [[ "${somatics_ind}" == "" ]]; then
        somatics_ind=0
    fi
    local germline_ind=$( jq -r '.[] | .DataRequests_DR_3_3_germlineanalysesdataDNA' <temp.json )
    if [[ "${germline_ind}" == "" ]]; then
        germline_ind=0
    fi
    local tumor_clinical_ind=$( jq -r '.[] | .DataRequests_DR_3_2_tumourdata' <temp.json )
    if [[ "${tumor_clinical_ind}" == "" ]]; then
        tumor_clinical_ind=0
    fi
    local patient_clinical_ind=$( jq -r '.[] | .DataRequests_DR_3_2_patientdata' <temp.json )
    if [[ "${patient_clinical_ind}" == "" ]]; then
        patient_clinical_ind=0
    fi
    local treatment_response_clinical_ind=$( jq -r '.[] | .DataRequests_DR_3_2_postbiopsytreatmentdata' <temp.json )
    if [[ "${treatment_response_clinical_ind}" == "" ]]; then
        treatment_response_clinical_ind=0
    fi
    local pre_treatment_clinical_ind=$( jq -r '.[] | .DataRequests_DR_3_2_previoustreatmentdata' <temp.json )
    if [[ "${pre_treatment_clinical_ind}" == "" ]]; then
        pre_treatment_clinical_ind=0
    fi

    uploads_single_line=$(join_array , ${uploads_array[@]})



    
    echo ""  >> "${output_cmd_file}"
    echo "# [INFO] date cmd created: $(date +"%y%m%d (%T)")" > "${output_cmd_file}"

    echo ""  >> "${output_cmd_file}"
    echo "# [TOOL] Template to prep data for datarequest:"  >> "${output_cmd_file}"

    info "Data Request: ${dr_name}"
    info "Update: ${dr_suffix}"

    ## create the magic
    if [[ "${dr_name_selection}" == "" ]]; then

      echo "dr_name=${dr_name}" >> "${output_cmd_file}"
        echo "request_name=${request_name}" >> "${output_cmd_file}"
        echo "patient_selection_sql='/data/common/repos/scripts/datarequest/selection/DR${dr_index}.sql'" >> "${output_cmd_file}"
        echo "include_somatics=${somatics_ind}" >> "${output_cmd_file}"
        echo "include_germline=${germline_ind}" >> "${output_cmd_file}"
        echo "include_tumor_clinical_data=${tumor_clinical_ind}" >> "${output_cmd_file}"
        echo "include_patient_clinical_data=${patient_clinical_ind}" >> "${output_cmd_file}"
        echo "include_treatment_response_clinical_data=${treatment_response_clinical_ind}" >> "${output_cmd_file}"
        echo "include_pre_treatment_clinical_data=${pre_treatment_clinical_ind}" >> "${output_cmd_file}"
        echo "include_rano_measurement_by_patient=0" >> "${output_cmd_file}"
        echo "include_tumor_markers_by_patient=0" >> "${output_cmd_file}"
        cmd_array+=('compose_datarequest ${dr_name} ${request_name} ${patient_selection_sql} \
        ${include_somatics} ${include_germline} 0 0 0 0 \
        ${include_tumor_clinical_data} ${include_patient_clinical_data} ${include_treatment_response_clinical_data} \
        ${include_pre_treatment_clinical_data} ${include_rano_measurement_by_patient} ${include_tumor_markers_by_patient}')

    else

        ## we need the index of DR
        local request_name_selection="${dr_name_selection}"

        ## reset release/request ids to include suffix if given
        if [[ "${dr_suffix_selection}" != "" ]]; then
            request_name_selection="${dr_name_selection}-${dr_suffix_selection}"
        fi

        info "Data prep based on old selection ... "
        info "Data Request used for selection: ${request_name_selection}"

        echo "dr_name=${dr_name}" >> "${output_cmd_file}"
        echo "request_name=${request_name}" >> "${output_cmd_file}"
        echo "dr_name_selection=${dr_name_selection}" >> "${output_cmd_file}"
        echo "request_name_selection=${request_name_selection}" >> "${output_cmd_file}"
        echo "include_somatics=${somatics_ind}" >> "${output_cmd_file}"
        echo "include_germline=${germline_ind}" >> "${output_cmd_file}"
        echo "include_tumor_clinical_data=${tumor_clinical_ind}" >> "${output_cmd_file}"
        echo "include_patient_clinical_data=${patient_clinical_ind}" >> "${output_cmd_file}"
        echo "include_treatment_response_clinical_data=${treatment_response_clinical_ind}" >> "${output_cmd_file}"
        echo "include_pre_treatment_clinical_data=${pre_treatment_clinical_ind}" >> "${output_cmd_file}"
        echo "include_rano_measurement_by_patient=0" >> "${output_cmd_file}"
        echo "include_tumor_markers_by_patient=0" >> "${output_cmd_file}"
        cmd_array+=('compose_datarequest_old_selection ${dr_name} ${request_name} ${dr_name_selection} ${request_name_selection} \
        ${include_somatics} ${include_germline} 0 0 0 0 \
        ${include_tumor_clinical_data} ${include_patient_clinical_data} ${include_treatment_response_clinical_data} \
        ${include_pre_treatment_clinical_data} ${include_rano_measurement_by_patient} ${include_tumor_markers_by_patient}')

    fi

    info "Writing cmd to cmd file ${output_cmd_file}"

    cmd_single_line=$(echo "${cmd_array[@]}")
    for cmd_line in "${cmd_array[@]}"; do
        echo "${cmd_line} \\" >> "${output_cmd_file}"
    done
    echo ""  >> "${output_cmd_file}"

    info "Making cmd file executable"
    chmod +x "${output_cmd_file}"

    info "TODO:"
    info " 1) Inspect cmd file: cat ${output_cmd_file}"
    info " 2) Make sure the sql for selection is available at '/data/common/repos/scripts/datarequest/selection/DR${dr_index}.sql' (if needed)"
    info " 3) And then run cmd with: ${output_cmd_file} | tee -a ${proposed_log_file}"
    info " 4) Copy the job to the correct DR folder using: cp ${output_cmd_file}  /data/data_archive/datarequests/${dr_name}/${request_name}/logs/."
    info " 5) Copy the log to the correct DR folder using: cp ${proposed_log_file}  /data/data_archive/datarequests/${dr_name}/${request_name}/logs/."
    info "Finished with $(basename $0)"

    rm temp.json

}

join_array() {
    local IFS="$1";
    shift;
    echo "$*";
}

die() {
    echo "[ERROR] $(date +"%y%m%d %T") $@" >&2
    exit 1
}
warn() {
    echo "[WARN] $(date +"%y%m%d %T") $@" >&2
}
info() {
    echo "[INFO] $(date +"%y%m%d %T") $@"
}

main