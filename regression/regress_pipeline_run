#!/bin/bash

TABIX_PATH=/data/common/tools/tabix_v0.2.6
RTG_PATH=/data/common/software/rtg-tools_v3.6.2/installation/rtg-tools-3.6.2-bc71ee0
SDF_PATH=/data/common/software/dbs/RTGSDF_GRCh37

run=$1
truthrun=$2

refsample=$3
tumorsample=$4
out=$5

echo -e "Starting regression check between ${run} and ${truthrun}"
mkdir ${out}

# KODU: Step 1: Assess final BAMs are identical. Same version of BWA with same nr of threads should yield identical mapping
echo -e "  Diffing reference BAMs"
refbam=${refsample}/mapping/${refsample}_dedup.realigned.bam
#diff ${run}/${refbam} ${truthrun}/${refbam} > ${out}/refsamplediff

echo -e "  Diffing tumor BAMs"
tumorbam=${tumorsample}/mapping/${tumorsample}_dedup.realigned.bam
#diff ${run}/${tumorsample} ${truthrun}/${tumorsample} > ${out}/tumorsamplediff

# KODU: Step 2: Assess final somatic variant files are identical, after removing the headers (lines starting with "#")
grep -v "#" ${run}/somaticVariants/${refsample}_${tumorsample}/${refsample}_${tumorsample}_merged_somatics_snpEff_dbSNP_Cosmicv76_melted.vcf > ${out}/run_headerless_somatics.vcf
grep -v "#" ${truthrun}/somaticVariants/${refsample}_${tumorsample}/${refsample}_${tumorsample}_merged_somatics_snpEff_dbSNP_Cosmicv76_melted.vcf > ${out}/truthrun_headerless_somatics.vcf
echo -e "  Diffing headerless somatic VCFs"
diff ${out}/run_headerless_somatics.vcf ${out}/truthrun_headerless_somatics.vcf > ${out}/somaticvariantdiff

exit

# KODU: Step 3: Assess germline variant files are identical using rtg vcfeval.
# This tool has a known issue with evaluating overlapping variant regions so has to be called multiple times.

germlinevcf=GIAB_SOMATIC-MIX.filtered_variants_snpEff_snpSift_Cosmicv76_GoNLv5.vcf

# KODU: Step 3.1: Generate gz and tbi needed for rtg tools

echo -e "  Generating zipped and indexed germline VCF for ${run}"
${TABIX_PATH}/bgzip -c ${run}/${germlinevcf} > ${out}/run_${germlinevcf}.gz
${TABIX_PATH}/tabix ${out}/run_${germlinevcf}.gz

echo -e "  Generating zipped and indexed germline VCF for ${truthrun}"
${TABIX_PATH}/bgzip -c ${truthrun}/${germlinevcf} > ${out}/truthrun_${germlinevcf}.gz
${TABIX_PATH}/tabix ${out}/truthrun_${germlinevcf}.gz

# KODU: Step 3.2: Run RTG vcfeval 3 times.

echo -e "  Starting RTG vcfeval for ${refsample}"
${RTG_PATH}/rtg vcfeval -b ${out}/run_${germlinevcf}.gz -c ${out}/truthrun_${germlinevcf}.gz -o ${out}/Round1${refsample} -t ${SDF_PATH} --ref-overlap --sample=${refsample} > ${out}/${refsample}_round1_rtg_vcfeval_log
${RTG_PATH}/rtg vcfeval -b ${out}/Round1${refsample}/fp.vcf.gz -c ${out}/Round1${refsample}/fn.vcf.gz -o ${out}/Round2${refsample} -t ${SDF_PATH} --ref-overlap --sample=${refsample} > ${out}/${refsample}_round2_rtg_vcfeval_log
${RTG_PATH}/rtg vcfeval -b ${out}/Round2${refsample}/fp.vcf.gz -c ${out}/Round2${refsample}/fn.vcf.gz -o ${out}/Round3${refsample} -t ${SDF_PATH} --ref-overlap --sample=${refsample} > ${out}/${refsample}_round3_rtg_vcfeval_log

echo -e "  Starting RTG vcfeval for ${tumorsample}"
${RTG_PATH}/rtg vcfeval -b ${out}/run_${germlinevcf}.gz -c ${out}/truthrun_${germlinevcf}.gz -o ${out}/Round1${tumorsample} -t ${SDF_PATH} --ref-overlap --sample=${tumorsample} > ${out}/${tumorsample}_round1_rtg_vcfeval_log
${RTG_PATH}/rtg vcfeval -b ${out}/Round1${refsample}/fp.vcf.gz -c ${out}/Round1${refsample}/fn.vcf.gz -o ${out}/Round2${tumorsample} -t ${SDF_PATH} --ref-overlap --sample=${tumorsample} > ${out}/${tumorsample}_round2_rtg_vcfeval_log
${RTG_PATH}/rtg vcfeval -b ${out}/Round2${refsample}/fp.vcf.gz -c ${out}/Round2${refsample}/fn.vcf.gz -o ${out}/Round3${tumorsample} -t ${SDF_PATH} --ref-overlap --sample=${tumorsample} > ${out}/${tumorsample}_round3_rtg_vcfeval_log


