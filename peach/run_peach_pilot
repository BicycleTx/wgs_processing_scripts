#!/usr/bin/env bash

source locate_files || exit 1
source message_functions || exit 1
source metadata_functions || exit 1

SCRIPT_NAME="$(basename "$0")"

FULL_DPYD_PANEL_NAME="DPYD.json"
MINIMAL_DPYD_PANEL_NAME="min_DPYD.json"

main() {
  info "Started ${SCRIPT_NAME}"

  # Parse args
  local key
  local run_dir
  local peach_main
  local venv_dir
  local panel_name
  while [[ $# -gt 0 ]]
  do
  key="$1" && shift
  case $key in
      -r|--rundir)
      run_dir="$1" && shift
      ;;
      -m|--main)
      peach_main="$1" && shift  # Optional argument
      ;;
      -v|--venv)
      venv_dir="$1" && shift  # Optional argument
      ;;
      -p|--panel)
      panel_name="$1" && shift  # Optional argument
      ;;
      *)    # Unknown option
      OTHER_OPTIONS+=("$key") # Save it in an array for later
      ;;
  esac
  done

  # Default values for arguments
  if [[ -z ${peach_main} ]]; then
    peach_main=$(locate_peach_main) || die "Could not get default PEACH main path"
  fi
  if [[ -z ${venv_dir} ]]; then
    venv_dir=$(locate_peach_venv_dir) || die "Could not get default PEACH venv dir"
  fi
  if [[ -z ${panel_name} ]]; then
    panel_name="${MINIMAL_DPYD_PANEL_NAME}"
  fi

  # Sanity checks
  [[ "${#OTHER_OPTIONS[@]}" -eq 0 ]] || die "Unrecognized options! : ${OTHER_OPTIONS[*]}"
  [[ -n ${run_dir} ]] || die "Variable 'rundir' has not been set."
  [[ -d ${run_dir} ]] || die "run_dir should be a dir: ${run_dir}."
  [[ -d ${venv_dir} ]] || die "venv_dir should be a dir: ${venv_dir}."

  # Get argument values
  local output_dir
  output_dir=$(get_output_dir "${run_dir}" "${panel_name}") || die "Could not get output dir"
  local peach_version
  peach_version=$(echo "pilot" | tr "_" " " | tr "v" " "| awk '{print $1}')
  local ref_sample
  ref_sample=$(load_ref_sample_from_metadata "${run_dir}") || die "Could not get ref sample from metadata"
  local tumor_sample
  tumor_sample=$(load_tumor_sample_from_metadata "${run_dir}") || die "Could not get tumor sample from metadata"
  local germline_vcf
  germline_vcf=$(locate_purple_germline_variants "${run_dir}") || die "Could not get purple germline vcf path"
  local peach_resource_dir
  peach_resource_dir=$(locate_peach_resource_dir) || die "Could not get PEACH resource dir"
  local panel_file="${peach_resource_dir}/panelfiles/${panel_name}"

  # Start virtual venv
  source "${venv_dir}/bin/activate" || die "Could not activate PEACH venv"

  # Add path to environment variable
  export PYTHONPATH="${PYTHONPATH}:${peach_main}/../"

  # Delete output dir if it exists
  if [[ -d "${output_dir}" ]]; then
      info "PEACH pilot dir exist. PEACH dir will first be removed and then be replaced"
      rm -r "${output_dir}" || die "Could not remove existing PEACH pilot dir"
  fi

  # Run PEACH
  "${peach_main}" \
      "--vcf" "${germline_vcf}" \
      "--sample_t_id" "${tumor_sample}" \
      "--sample_r_id" "${ref_sample}" \
      "--version" "${peach_version}" \
      "--outputdir" "${output_dir}"  \
      "--panel" "${panel_file}" \
      || die "PEACH pilot failed"

  info "Finished ${SCRIPT_NAME}"
}

get_output_dir() {
  local run_dir=$1 && shift
  local panel_name=$1 && shift

  if [[ -z "${panel_name}" ]]; then
    die "Not enough arguments to ${FUNCNAME[0]}"
  fi

  if [[ "${panel_name}" == "${FULL_DPYD_PANEL_NAME}" ]]; then
    local output_dir_name="peach_pilot_full"
  elif [[ "${panel_name}" == "${MINIMAL_DPYD_PANEL_NAME}" ]]; then
    local output_dir_name="peach_pilot"
  else
    die "Unrecognized panel name ${panel_name}. Known panel names: '${MINIMAL_DPYD_PANEL_NAME}', '${FULL_DPYD_PANEL_NAME}'"
  fi
  echo "${run_dir}/${output_dir_name}"
}

main "$@"
