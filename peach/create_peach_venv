#!/usr/bin/env bash

source locate_files || exit 1
source message_functions || exit 1

TRUE="TRUE"
FALSE="FALSE"

print_usage() {
  echo ""
  echo "Descr: Create a venv with PEACH dependencies installed."
  echo "Usage: $(basename "$0") "
  echo "Exmpl: $(basename "$0")"
  echo "       $(basename "$0") --requirements /some/path/to/requirements.txt --venv /venv/output/path"
  echo ""
  echo "Default values of optional parameters are taken from the locate_files script"
  echo "Options:"
  echo "  -r/--requirements  [OPTIONAL]   Path to the 'requirements.txt' file in a local copy of the PEACH git repo."
  echo "  -v/--venv          [OPTIONAL]   Directory where the venv is created."
  echo ""
  exit 1
}

info "Starting creation of PEACH venv"

# Parse args
while [[ $# -gt 0 ]]
do
key="$1" && shift
case $key in
    -r|--requirements)
    peach_requirements="$1" && shift  # Optional argument
    ;;
    -v|--venv)
    venv_dir="$1" && shift  # Optional argument
    ;;
    *)    # Unknown option
    OTHER_OPTIONS+=("$key") # Save it in an array for later
    ;;
esac
done

# Default values for arguments
if [[ -z ${venv_dir} ]]; then
  venv_dir=$(locate_peach_venv_dir)
fi
if [[ -z ${peach_requirements} ]]; then
  peach_requirements=$(locate_peach_requirements)
fi

# Sanity checks
sanity_check_fail="${FALSE}"
if [[ ! "${#OTHER_OPTIONS[@]}" -eq 0 ]]; then
  warn "Unrecognized options! : ${OTHER_OPTIONS[*]}"
  sanity_check_fail="${TRUE}"
fi
if [[ ! -f ${peach_requirements} ]]; then
  warn "PEACH requirements file should be a file: ${peach_requirements}."
  sanity_check_fail="${TRUE}"
fi
if [[ "${sanity_check_fail}" == "${TRUE}" ]]; then
  print_usage
fi
# Create venv
create_python_venv --venv_dir "${venv_dir}" --requirements "${peach_requirements}"

info "Finished creating PEACH venv"