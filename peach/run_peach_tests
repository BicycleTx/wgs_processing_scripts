#!/usr/bin/env bash

source locate_files || exit 1
source message_functions || exit 1

SCRIPT_NAME="$(basename "$0")"

FALSE="FALSE"
TRUE="TRUE"

print_usage() {
  echo ""
  echo "Descr: Run PEACH tests"
  echo "Usage: $(basename "$0") --repodir /some/peach/repo --venv /directory/containing/peach/venv"
  echo "Exmpl: $(basename "$0")"
  echo "       $(basename "$0") --repodir /some/peach/repo --venv /directory/containing/peach/venv"
  echo "       $(basename "$0") -r /some/peach/repo/dir -v /directory/containing/peach/venv"
  echo "Options:"
  echo "  -r/--repodir   [OPTIONAL]   Local directory containing the PEACH git repo."
  echo "                              The default value is taken from the locate_files script."
  echo "  -v/--venv      [OPTIONAL]   Local directory containing a Python virtual environment with PEACH's dependencies"
  echo "                              The default value is taken from the locate_files script."
  echo ""
  exit 1
}

main() {
  info "Started ${SCRIPT_NAME}"

  # Parse args
  local key
  local peach_repo_base_dir
  local venv_dir
  while [[ $# -gt 0 ]]
  do
  key="$1" && shift
  case $key in
      -r|--repodir)
      peach_repo_base_dir="$1" && shift  # Optional argument
      ;;
      -v|--venv)
      venv_dir="$1" && shift  # Optional argument
      ;;
      *)    # Unknown option
      OTHER_OPTIONS+=("$key") # Save it in an array for later
      ;;
  esac
  done

  # Default values for arguments
  if [[ -z ${venv_dir} ]]; then
    venv_dir=$(locate_peach_venv_dir) || die "Could not get default venv dir"
  fi
  if [[ -z ${peach_repo_base_dir} ]]; then
    peach_repo_base_dir=$(locate_repo_dir "peach") || die "Could not get default peach repo base dir"
  fi

  # Sanity checks
  local sanity_check_fail="${FALSE}"
  if [[ ! "${#OTHER_OPTIONS[@]}" -eq 0 ]]; then
    warn "Unrecognized options! : ${OTHER_OPTIONS[*]}"
    sanity_check_fail="${TRUE}"
  fi
  if [[ ! -d ${peach_repo_base_dir} ]]; then
    warn "peach_repo_base_dir should be a dir: ${peach_repo_base_dir}."
    sanity_check_fail="${TRUE}"
  fi
  if [[ !-d ${venv_dir} ]]; then
    warn "venv_dir should be a dir: ${venv_dir}."
    sanity_check_fail="${TRUE}"
  fi
  if [[ "${sanity_check_fail}"=="${TRUE}" ]]; then
    print_usage
  fi

  info "Activate PEACH venv"
  source "${venv_dir}/bin/activate" || die "Could not activate PEACH venv"

  # Add paths to environment variables
  export PYTHONPATH="${PYTHONPATH}:${peach_repo_base_dir}/src/"
  export MYPYPATH="${MYPYPATH}:${peach_repo_base_dir}/src/"

  "${peach_repo_base_dir}/test_peach"

  info "Finished ${SCRIPT_NAME}"
}

main "$@"