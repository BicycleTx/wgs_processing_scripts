#!/usr/bin/env bash

source message_functions || exit 1

barcode=$1 # sample barcode

if [[ -z "${barcode}" ]]; then
    echo "---"
    echo "Descr: Prints commands to patch API records and gsutil commands to delete fastq"
    echo "Usage: $(basename $0) \$barcode}"
    echo "   Eg: $(basename $0) 'FR12345678'"
    echo "---"
    exit 1
fi

main () {
    echo "[INFO] Searching for sample (${barcode})"
    result=$(hmf_api_get "samples?barcode=${barcode}")
    count=$(echo "${result}" | jq length)

    [[ ${count} -eq 1 ]] || die "[ERROR] Number of samples found for barcode ${barcode} not 1 (${count})"

    sample=$(echo "${result}" | jq -r .[0])
    id=$(echo "${sample}" | jq -r .id)
    name=$(echo "${sample}" | jq -r .name)
    status=$(echo "${sample}" | jq -r .status)

    yld=$(echo "${sample}" | jq -r .yld)
    yld=$((yld/1000000000))
    q30=$(echo "${sample}" | jq -r .q30)

    info "Found sample (name=${name} barcode=${barcode} status=${status} yld=${yld} q30=${q30} id=${id})"
    info "Potential patch/cleanup steps:"

    echo "# invalidate all runs involved"
    runs_json=$(hmf_api_get "runs?barcode=${barcode}")
    echo "${runs_json}" | jq -r .[].id | while read run_id; do
        echo " hmf_api_patch -e -c fastq -o '${run_id}' -f qc_pass -v Invalidated"
    done

    echo "# invalidate all fastq pairs of sample"
    fastq_json=$(hmf_api_get "fastq?sample_id=${id}")
    echo "${fastq_json}" | jq -r .[].id | while read fastq_id; do
        echo " hmf_api_patch -e -c fastq -o '${fastq_id}' -f qc_pass -v false"
    done

    echo "# Patch sample"
    echo " hmf_api_patch -e -c samples -o '${id}' -f status -v Deleted"
    echo " hmf_api_patch -e -c samples -o '${id}' -f yld -v null"
    echo " hmf_api_patch -e -c samples -o '${id}' -f q30 -v null"

    echo "# Delete FASTQ from bucket"
    echo "${fastq_json}" | jq -cr '.[] | [.bucket, .name_r1, .name_r2] | @tsv' | while read info; do
        bucket=$(echo "${info}" | cut -f1)
        name_r1=$(echo "${info}" | cut -f2)
        name_r2=$(echo "${info}" | cut -f3)
        if [[ "${bucket}" != "" && "${name_r1}" != "" ]]; then
            echo " gsutil rm gs://${bucket}/${name_r1}"
        fi
        if [[ "${bucket}" != "" && "${name_r2}" != "" ]]; then
            echo " gsutil rm gs://${bucket}/${name_r2}"
        fi
    done
}

main
