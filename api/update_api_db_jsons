#!/usr/bin/env bash

JSON_DIR="/data/ops/api/prod/database"
CRED_DIR="/data/common/dbs/api_credentials"
CRT_FILE="${CRED_DIR}/api.crt"
KEY_FILE="${CRED_DIR}/api.key"
BASE_URL="https://api.hartwigmedicalfoundation.nl/hmf/v1"
LOG_FILE="${JSON_DIR}/update_api_db.log"
DATETIME=$(date)

DB_TYPES=( fastq entities runs samples sets flowcells inis shares stacks platforms sequencers )

if [[ ! -f "${CRT_FILE}" ]]; then echo "[ERROR] CRT file not found (${CRT_FILE})" && exit 1; fi
if [[ ! -f "${KEY_FILE}" ]]; then echo "[ERROR] KEY file not found (${KEY_FILE})" && exit 1; fi

## In case tmp files do exist but are older than 30 min (cmin param)
## then assume previous execution to have timed out and continue anyway
if [[ $(find "${JSON_DIR}" -maxdepth 1 -name "*.tmp" -cmin -30 | wc -l) -gt 0  ]]; then
    echo "[INFO] Tmp files younger than 30 min found. Skipping." | tee -a ${LOG_FILE}
    exit 0 
fi

for TYPE in "${DB_TYPES[@]}"; do
    API_URL="${BASE_URL}/${TYPE}"

    ## Fastq is the largest type and sometimes takes too long leading to timeout
    ## Below filter reduces to only those files still in bucket
    if [[ "${TYPE}" == "fastq" ]]; then
        API_URL+="?bucket=hmf-fastq-storage"
    fi
    OUTPUT_FILE="${JSON_DIR}/${TYPE}.json"
    OUTPUT_FILE_TMP="${JSON_DIR}/tmp_${TYPE}.json.tmp"

    curl \
        --cert-type pem \
        --cert "${CRT_FILE}" \
        --key "${KEY_FILE}" \
        -X GET \
        -H "Accept: application/json" \
        -H "Content-Type: application/json" \
        "${API_URL}" \
        > ${OUTPUT_FILE_TMP}

    if [[ 0 -eq $? ]]; then
        cp ${OUTPUT_FILE_TMP} ${OUTPUT_FILE}
        echo "[INFO] Written to ${OUTPUT_FILE}"
    else
        echo "${DATETIME} WARN retrieval of $TYPE failed so stopping" && exit 1
    fi
done

rm ${JSON_DIR}/tmp_*.tmp

echo "${DATETIME} Script $(basename $0) started at ${DATETIME} and finished at $(date)" | tee -a ${LOG_FILE}
