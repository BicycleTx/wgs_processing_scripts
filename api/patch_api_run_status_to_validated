#!/bin/bash

script_name=$(basename $0)
api_url="https://api.hartwigmedicalfoundation.nl/hmf/v1"
api_dir="/data/common/dbs/api_credentials"
api_key="${api_dir}/api.key"
api_crt="${api_dir}/api.crt"

if [[ $# -ne 1 || $1 == "-h" || $1 == "--help" ]]; then
  echo "-----"
  echo "Descr: Prints code to patch run status to \"Validated\""
  echo "Usage: ${script_name} \$run_name"
  echo "   Eg: ${script_name} 200101_HMFregXXXX_FR1_FR2_SAMPLE"
  echo "-----"
  exit 1
fi

run_name=$1

main () {
  echo "[INFO] Querying api to find run (${run_name})"
  result=$(query_api.pl -type runs -filter "name=${run_name}" -exact -json)
  result_count=$(echo "${result}" | jq length)

  if [[ $result_count -ne 1 ]]; then
    echo "[EXIT] Error: expected one object for ${run_name} but ${result_count} found instead"
    exit 1
  else
    obj=$(echo "${result}" | jq -r .[0])
    oid=$(echo "${obj}" | jq -r .id) 
    sts=$(echo "${obj}" | jq -r .status)
    bkt=$(echo "${obj}" | jq -r .bucket)

    echo "[INFO] Found run object (id=${oid} status=${sts} bucket=${bkt})"
    echo "[INFO] Execute following to PATCH status to Validated"
    echo "http --ignore-stdin --cert='${api_crt}' --cert-key='${api_key}' PATCH '${api_url}/runs/${oid}' status=Validated"
  fi
}

main
